{
  "_type": "export",
  "__export_format": 4,
  "__export_date": "2021-02-18T02:52:38.312Z",
  "__export_source": "github-rest-apis-for-insomnia:1.1.1",
  "resources": [
    {
      "parentId": "__WORKSPACE_ID__",
      "_id": "__FLD_146__",
      "_type": "request_group",
      "name": "GitHub v3 REST API",
      "environment": {
        "github_api_root": "https://api.github.com",
        "access_token": "",
        "account_id": 0,
        "alert_number": 0,
        "app_slug": "",
        "archive_format": "",
        "artifact_id": 0,
        "asset_id": 0,
        "assignee": "",
        "author_id": 0,
        "authorization_id": 0,
        "base": "",
        "branch": "",
        "build_id": 0,
        "card_id": 0,
        "check_run_id": 0,
        "check_suite_id": 0,
        "client_id": "",
        "code": "",
        "column_id": 0,
        "comment_id": 0,
        "comment_number": 0,
        "commit_sha": "",
        "content_reference_id": 0,
        "credential_id": 0,
        "deployment_id": 0,
        "discussion_number": 0,
        "enterprise": "",
        "event_id": 0,
        "file_sha": "",
        "fingerprint": "",
        "gist_id": "",
        "gpg_key_id": 0,
        "grant_id": 0,
        "head": "",
        "hook_id": 0,
        "installation_id": 0,
        "invitation_id": 0,
        "issue_number": 0,
        "job_id": 0,
        "key": "",
        "key_id": 0,
        "license": "",
        "migration_id": 0,
        "milestone_number": 0,
        "name": "",
        "org": "",
        "org_id": 0,
        "owner": "",
        "path": "",
        "plan_id": 0,
        "project_id": 0,
        "pull_number": 0,
        "reaction_id": 0,
        "ref": "",
        "release_id": 0,
        "repo": "",
        "repo_name": "",
        "repository_id": 0,
        "review_id": 0,
        "run_id": 0,
        "runner_group_id": 0,
        "runner_id": 0,
        "scim_group_id": "",
        "scim_user_id": "",
        "secret_name": "",
        "sha": "",
        "status_id": 0,
        "tag": "",
        "tag_sha": "",
        "target_user": "",
        "team_id": 0,
        "team_slug": "",
        "template_owner": "",
        "template_repo": "",
        "thread_id": 0,
        "tree_sha": "",
        "username": "",
        "workflow_id": "workflow_id"
      }
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_147__",
      "_type": "request_group",
      "name": "actions"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_148__",
      "_type": "request_group",
      "name": "activity"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_149__",
      "_type": "request_group",
      "name": "apps"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_150__",
      "_type": "request_group",
      "name": "audit-log"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_151__",
      "_type": "request_group",
      "name": "billing"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_152__",
      "_type": "request_group",
      "name": "checks"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_153__",
      "_type": "request_group",
      "name": "code-scanning"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_154__",
      "_type": "request_group",
      "name": "codes-of-conduct"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_155__",
      "_type": "request_group",
      "name": "emojis"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_156__",
      "_type": "request_group",
      "name": "enterprise-admin"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_157__",
      "_type": "request_group",
      "name": "gists"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_158__",
      "_type": "request_group",
      "name": "git"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_159__",
      "_type": "request_group",
      "name": "gitignore"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_160__",
      "_type": "request_group",
      "name": "interactions"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_161__",
      "_type": "request_group",
      "name": "issues"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_162__",
      "_type": "request_group",
      "name": "licenses"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_163__",
      "_type": "request_group",
      "name": "markdown"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_164__",
      "_type": "request_group",
      "name": "meta"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_165__",
      "_type": "request_group",
      "name": "migrations"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_166__",
      "_type": "request_group",
      "name": "oauth-authorizations"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_167__",
      "_type": "request_group",
      "name": "orgs"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_168__",
      "_type": "request_group",
      "name": "projects"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_169__",
      "_type": "request_group",
      "name": "pulls"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_170__",
      "_type": "request_group",
      "name": "rate-limit"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_171__",
      "_type": "request_group",
      "name": "reactions"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_172__",
      "_type": "request_group",
      "name": "repos"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_173__",
      "_type": "request_group",
      "name": "scim"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_174__",
      "_type": "request_group",
      "name": "search"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_175__",
      "_type": "request_group",
      "name": "secret-scanning"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_176__",
      "_type": "request_group",
      "name": "teams"
    },
    {
      "parentId": "__FLD_146__",
      "_id": "__FLD_177__",
      "_type": "request_group",
      "name": "users"
    },
    {
      "parentId": "__FLD_164__",
      "_id": "__REQ_3254__",
      "_type": "request",
      "name": "GitHub API Root",
      "description": "",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3255__",
      "_type": "request",
      "name": "Get the authenticated app",
      "description": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#get-the-authenticated-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/app",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3256__",
      "_type": "request",
      "name": "Create a GitHub App from a manifest",
      "description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.\n\nhttps://docs.github.com/v3/apps/#create-a-github-app-from-a-manifest",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/app-manifests/{{ code }}/conversions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3257__",
      "_type": "request",
      "name": "Get a webhook configuration for an app",
      "description": "Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"[Creating a GitHub App](/developers/apps/creating-a-github-app).\"\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps#get-a-webhook-configuration-for-an-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/app/hook/config",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3258__",
      "_type": "request",
      "name": "Update a webhook configuration for an app",
      "description": "Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"[Creating a GitHub App](/developers/apps/creating-a-github-app).\"\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps#update-a-webhook-configuration-for-an-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/app/hook/config",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3259__",
      "_type": "request",
      "name": "List installations for the authenticated app",
      "description": "You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.\n\nhttps://docs.github.com/v3/apps/#list-installations-for-the-authenticated-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/app/installations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "outdated",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3260__",
      "_type": "request",
      "name": "Get an installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#get-an-installation-for-the-authenticated-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3261__",
      "_type": "request",
      "name": "Delete an installation for the authenticated app",
      "description": "Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's access to your account's resources, then we recommend the \"[Suspend an app installation](https://docs.github.com/v3/apps/#suspend-an-app-installation)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#delete-an-installation-for-the-authenticated-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3262__",
      "_type": "request",
      "name": "Create an installation access token for an app",
      "description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#create-an-installation-access-token-for-an-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}/access_tokens",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3263__",
      "_type": "request",
      "name": "Suspend an app installation",
      "description": "**Note:** Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see \"[Suspending a GitHub App installation](https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/).\"\n\nSuspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub API or webhook events is blocked for that account.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#suspend-an-app-installation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}/suspended",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3264__",
      "_type": "request",
      "name": "Unsuspend an app installation",
      "description": "**Note:** Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see \"[Suspending a GitHub App installation](https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/).\"\n\nRemoves a GitHub App installation suspension.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#unsuspend-an-app-installation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}/suspended",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3265__",
      "_type": "request",
      "name": "List your grants",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#list-your-grants",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/applications/grants",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3266__",
      "_type": "request",
      "name": "Get a single grant",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#get-a-single-grant",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/applications/grants/{{ grant_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3267__",
      "_type": "request",
      "name": "Delete a grant",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#delete-a-grant",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/grants/{{ grant_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3268__",
      "_type": "request",
      "name": "Delete an app authorization",
      "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid OAuth `access_token` as an input parameter and the grant for the token's owner will be deleted.\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).\n\nhttps://docs.github.com/rest/reference/apps#delete-an-app-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/grant",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3269__",
      "_type": "request",
      "name": "Revoke a grant for an application",
      "description": "**Deprecation Notice:** GitHub will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under \"Authorized OAuth Apps\" on GitHub](https://github.com/settings/applications#authorized).\n\nhttps://docs.github.com/rest/reference/apps#revoke-a-grant-for-an-application",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/grants/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3270__",
      "_type": "request",
      "name": "Check a token",
      "description": "OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) to use this endpoint, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.\n\nhttps://docs.github.com/rest/reference/apps#check-a-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3271__",
      "_type": "request",
      "name": "Reset a token",
      "description": "OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.\n\nhttps://docs.github.com/rest/reference/apps#reset-a-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3272__",
      "_type": "request",
      "name": "Delete an app token",
      "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.\n\nhttps://docs.github.com/rest/reference/apps#delete-an-app-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3273__",
      "_type": "request",
      "name": "Create a scoped access token",
      "description": "Exchanges a non-repository scoped user-to-server OAuth access token for a repository scoped user-to-server OAuth access token. You can specify which repositories the token can access and which permissions are granted to the token. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.\n\nhttps://docs.github.com/rest/reference/apps#create-a-scoped-access-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/token/scoped",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3274__",
      "_type": "request",
      "name": "Check an authorization",
      "description": "**Deprecation Notice:** GitHub will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.\n\nhttps://docs.github.com/rest/reference/apps#check-an-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/tokens/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3275__",
      "_type": "request",
      "name": "Reset an authorization",
      "description": "**Deprecation Notice:** GitHub will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.\n\nhttps://docs.github.com/rest/reference/apps#reset-an-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/tokens/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3276__",
      "_type": "request",
      "name": "Revoke an authorization for an application",
      "description": "**Deprecation Notice:** GitHub will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.\n\nhttps://docs.github.com/rest/reference/apps#revoke-an-authorization-for-an-application",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/tokens/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3277__",
      "_type": "request",
      "name": "Get an app",
      "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#get-an-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/apps/{{ app_slug }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3278__",
      "_type": "request",
      "name": "List your authorizations",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/authorizations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3279__",
      "_type": "request",
      "name": "Create a new authorization",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates OAuth tokens using [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#create-a-new-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/authorizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3280__",
      "_type": "request",
      "name": "Get-or-create an authorization for a specific app",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/authorizations/clients/{{ client_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3281__",
      "_type": "request",
      "name": "Get-or-create an authorization for a specific app and fingerprint",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nThis method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/authorizations/clients/{{ client_id }}/{{ fingerprint }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3282__",
      "_type": "request",
      "name": "Get a single authorization",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#get-a-single-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/authorizations/{{ authorization_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3283__",
      "_type": "request",
      "name": "Update an existing authorization",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#update-an-existing-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/authorizations/{{ authorization_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_166__",
      "_id": "__REQ_3284__",
      "_type": "request",
      "name": "Delete an authorization",
      "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/rest/reference/oauth-authorizations#delete-an-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/authorizations/{{ authorization_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_154__",
      "_id": "__REQ_3285__",
      "_type": "request",
      "name": "Get all codes of conduct",
      "description": "\n\nhttps://docs.github.com/v3/codes_of_conduct/#get-all-codes-of-conduct",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.scarlet-witch-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/codes_of_conduct",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_154__",
      "_id": "__REQ_3286__",
      "_type": "request",
      "name": "Get a code of conduct",
      "description": "\n\nhttps://docs.github.com/v3/codes_of_conduct/#get-a-code-of-conduct",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.scarlet-witch-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/codes_of_conduct/{{ key }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3287__",
      "_type": "request",
      "name": "Create a content attachment",
      "description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://docs.github.com/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://docs.github.com/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#create-a-content-attachment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.corsair-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/content_references/{{ content_reference_id }}/attachments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_155__",
      "_id": "__REQ_3288__",
      "_type": "request",
      "name": "Get emojis",
      "description": "Lists all the emojis available to use on GitHub.\n\nhttps://docs.github.com/v3/emojis/#get-emojis",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/emojis",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3289__",
      "_type": "request",
      "name": "Get GitHub Actions permissions for an enterprise",
      "description": "Gets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#get-github-actions-permissions-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3290__",
      "_type": "request",
      "name": "Set GitHub Actions permissions for an enterprise",
      "description": "Sets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#set-github-actions-permissions-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3291__",
      "_type": "request",
      "name": "List selected organizations enabled for GitHub Actions in an enterprise",
      "description": "Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-selected-organizations-enabled-for-github-actions-in-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions/organizations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3292__",
      "_type": "request",
      "name": "Set selected organizations enabled for GitHub Actions in an enterprise",
      "description": "Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#set-selected-organizations-enabled-for-github-actions-in-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions/organizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3293__",
      "_type": "request",
      "name": "Enable a selected organization for GitHub Actions in an enterprise",
      "description": "Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#enable-a-selected-organization-for-github-actions-in-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions/organizations/{{ org_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3294__",
      "_type": "request",
      "name": "Disable a selected organization for GitHub Actions in an enterprise",
      "description": "Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#disable-a-selected-organization-for-github-actions-in-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions/organizations/{{ org_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3295__",
      "_type": "request",
      "name": "Get allowed actions for an enterprise",
      "description": "Gets the selected actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#get-allowed-actions-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions/selected-actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3296__",
      "_type": "request",
      "name": "Set allowed actions for an enterprise",
      "description": "Sets the actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#set-allowed-actions-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/permissions/selected-actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3297__",
      "_type": "request",
      "name": "List self-hosted runner groups for an enterprise",
      "description": "Lists all self-hosted runner groups for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-self-hosted-runner-groups-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3298__",
      "_type": "request",
      "name": "Create a self-hosted runner group for an enterprise",
      "description": "Creates a new self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#create-self-hosted-runner-group-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3299__",
      "_type": "request",
      "name": "Get a self-hosted runner group for an enterprise",
      "description": "Gets a specific self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#get-a-self-hosted-runner-group-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3300__",
      "_type": "request",
      "name": "Update a self-hosted runner group for an enterprise",
      "description": "Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#update-a-self-hosted-runner-group-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3301__",
      "_type": "request",
      "name": "Delete a self-hosted runner group from an enterprise",
      "description": "Deletes a self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#delete-a-self-hosted-runner-group-from-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3302__",
      "_type": "request",
      "name": "List organization access to a self-hosted runner group in an enterprise",
      "description": "Lists the organizations with access to a self-hosted runner group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-organization-access-to-a-self-hosted-runner-group-in-a-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/organizations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3303__",
      "_type": "request",
      "name": "Set organization access for a self-hosted runner group in an enterprise",
      "description": "Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#set-organization-access-to-a-self-hosted-runner-group-in-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/organizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3304__",
      "_type": "request",
      "name": "Add organization access to a self-hosted runner group in an enterprise",
      "description": "Adds an organization to the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#add-organization-access-to-a-self-hosted-runner-group-in-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/organizations/{{ org_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3305__",
      "_type": "request",
      "name": "Remove organization access to a self-hosted runner group in an enterprise",
      "description": "Removes an organization from the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#remove-organization-access-to-a-self-hosted-runner-group-in-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/organizations/{{ org_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3306__",
      "_type": "request",
      "name": "List self-hosted runners in a group for an enterprise",
      "description": "Lists the self-hosted runners that are in a specific enterprise group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-self-hosted-runners-in-a-group-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/runners",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3307__",
      "_type": "request",
      "name": "Set self-hosted runners in a group for an enterprise",
      "description": "Replaces the list of self-hosted runners that are part of an enterprise runner group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#set-self-hosted-runners-in-a-group-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/runners",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3308__",
      "_type": "request",
      "name": "Add a self-hosted runner to a group for an enterprise",
      "description": "Adds a self-hosted runner to a runner group configured in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise`\nscope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#add-a-self-hosted-runner-to-a-group-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3309__",
      "_type": "request",
      "name": "Remove a self-hosted runner from a group for an enterprise",
      "description": "Removes a self-hosted runner from a group configured in an enterprise. The runner is then returned to the default group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#remove-a-self-hosted-runner-from-a-group-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runner-groups/{{ runner_group_id }}/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3310__",
      "_type": "request",
      "name": "List self-hosted runners for an enterprise",
      "description": "Lists all self-hosted runners configured for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-self-hosted-runners-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runners",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3311__",
      "_type": "request",
      "name": "List runner applications for an enterprise",
      "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-runner-applications-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runners/downloads",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3312__",
      "_type": "request",
      "name": "Create a registration token for an enterprise",
      "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN\n```\n\nhttps://docs.github.com/rest/reference/enterprise-admin#create-a-registration-token-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runners/registration-token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3313__",
      "_type": "request",
      "name": "Create a remove token for an enterprise",
      "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```\n\nhttps://docs.github.com/rest/reference/enterprise-admin#create-a-remove-token-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runners/remove-token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3314__",
      "_type": "request",
      "name": "Get a self-hosted runner for an enterprise",
      "description": "Gets a specific self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#get-a-self-hosted-runner-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3315__",
      "_type": "request",
      "name": "Delete a self-hosted runner from an enterprise",
      "description": "Forces the removal of a self-hosted runner from an enterprise. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#delete-self-hosted-runner-from-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/actions/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_150__",
      "_id": "__REQ_3316__",
      "_type": "request",
      "name": "Get the audit log for an enterprise",
      "description": "**Note:** The audit log REST API is currently in beta and is subject to change.\n\nGets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `admin:enterprise` scope.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/audit-log",
      "body": {},
      "parameters": [
        {
          "name": "phrase",
          "disabled": false
        },
        {
          "name": "include",
          "disabled": false
        },
        {
          "name": "after",
          "disabled": false
        },
        {
          "name": "before",
          "disabled": false
        },
        {
          "name": "order",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_151__",
      "_id": "__REQ_3317__",
      "_type": "request",
      "name": "Get GitHub Actions billing for an enterprise",
      "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nThe authenticated user must be an enterprise admin.\n\nhttps://docs.github.com/v3/billing/#get-github-actions-billing-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/settings/billing/actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_151__",
      "_id": "__REQ_3318__",
      "_type": "request",
      "name": "Get GitHub Packages billing for an enterprise",
      "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.\n\nhttps://docs.github.com/v3/billing/#get-github-packages-billing-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/settings/billing/packages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_151__",
      "_id": "__REQ_3319__",
      "_type": "request",
      "name": "Get shared storage billing for an enterprise",
      "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.\n\nhttps://docs.github.com/v3/billing/#get-shared-storage-billing-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprises/{{ enterprise }}/settings/billing/shared-storage",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3320__",
      "_type": "request",
      "name": "List public events",
      "description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.\n\nhttps://docs.github.com/rest/reference/activity#list-public-events",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3321__",
      "_type": "request",
      "name": "Get feeds",
      "description": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.\n\nhttps://docs.github.com/rest/reference/activity#get-feeds",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/feeds",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3322__",
      "_type": "request",
      "name": "List gists for the authenticated user",
      "description": "Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:\n\nhttps://docs.github.com/v3/gists/#list-gists-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3323__",
      "_type": "request",
      "name": "Create a gist",
      "description": "Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.\n\nhttps://docs.github.com/v3/gists/#create-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/gists",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3324__",
      "_type": "request",
      "name": "List public gists",
      "description": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.\n\nhttps://docs.github.com/v3/gists/#list-public-gists",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/public",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3325__",
      "_type": "request",
      "name": "List starred gists",
      "description": "List the authenticated user's starred gists:\n\nhttps://docs.github.com/v3/gists/#list-starred-gists",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/starred",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3326__",
      "_type": "request",
      "name": "Get a gist",
      "description": "\n\nhttps://docs.github.com/v3/gists/#get-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3327__",
      "_type": "request",
      "name": "Update a gist",
      "description": "Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.\n\nhttps://docs.github.com/v3/gists/#update-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3328__",
      "_type": "request",
      "name": "Delete a gist",
      "description": "\n\nhttps://docs.github.com/v3/gists/#delete-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3329__",
      "_type": "request",
      "name": "List gist comments",
      "description": "\n\nhttps://docs.github.com/rest/reference/gists#list-gist-comments",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3330__",
      "_type": "request",
      "name": "Create a gist comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/gists#create-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3331__",
      "_type": "request",
      "name": "Get a gist comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/gists#get-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3332__",
      "_type": "request",
      "name": "Update a gist comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/gists#update-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3333__",
      "_type": "request",
      "name": "Delete a gist comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/gists#delete-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3334__",
      "_type": "request",
      "name": "List gist commits",
      "description": "\n\nhttps://docs.github.com/v3/gists/#list-gist-commits",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/commits",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3335__",
      "_type": "request",
      "name": "List gist forks",
      "description": "\n\nhttps://docs.github.com/v3/gists/#list-gist-forks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/forks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3336__",
      "_type": "request",
      "name": "Fork a gist",
      "description": "**Note**: This was previously `/gists/:gist_id/fork`.\n\nhttps://docs.github.com/v3/gists/#fork-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/forks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3337__",
      "_type": "request",
      "name": "Check if a gist is starred",
      "description": "\n\nhttps://docs.github.com/v3/gists/#check-if-a-gist-is-starred",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/star",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3338__",
      "_type": "request",
      "name": "Star a gist",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/v3/gists/#star-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/star",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3339__",
      "_type": "request",
      "name": "Unstar a gist",
      "description": "\n\nhttps://docs.github.com/v3/gists/#unstar-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/star",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_157__",
      "_id": "__REQ_3340__",
      "_type": "request",
      "name": "Get a gist revision",
      "description": "\n\nhttps://docs.github.com/v3/gists/#get-a-gist-revision",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/{{ sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_159__",
      "_id": "__REQ_3341__",
      "_type": "request",
      "name": "Get all gitignore templates",
      "description": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user).\n\nhttps://docs.github.com/v3/gitignore/#get-all-gitignore-templates",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gitignore/templates",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_159__",
      "_id": "__REQ_3342__",
      "_type": "request",
      "name": "Get a gitignore template",
      "description": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/rest/overview/media-types/) to get the raw contents.\n\nhttps://docs.github.com/v3/gitignore/#get-a-gitignore-template",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gitignore/templates/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3343__",
      "_type": "request",
      "name": "List repositories accessible to the app installation",
      "description": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-app-installation",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/installation/repositories",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3344__",
      "_type": "request",
      "name": "Revoke an installation access token",
      "description": "Revokes the installation token you're using to authenticate as an installation and access this endpoint.\n\nOnce an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the \"[Create an installation access token for an app](https://docs.github.com/rest/reference/apps#create-an-installation-access-token-for-an-app)\" endpoint.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#revoke-an-installation-access-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/installation/token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3345__",
      "_type": "request",
      "name": "List issues assigned to the authenticated user",
      "description": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/v3/issues/#list-issues-assigned-to-the-authenticated-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/issues",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "assigned",
          "disabled": false
        },
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "labels",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "collab",
          "disabled": false
        },
        {
          "name": "orgs",
          "disabled": false
        },
        {
          "name": "owned",
          "disabled": false
        },
        {
          "name": "pulls",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_162__",
      "_id": "__REQ_3346__",
      "_type": "request",
      "name": "Get all commonly used licenses",
      "description": "\n\nhttps://docs.github.com/v3/licenses/#get-all-commonly-used-licenses",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/licenses",
      "body": {},
      "parameters": [
        {
          "name": "featured",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_162__",
      "_id": "__REQ_3347__",
      "_type": "request",
      "name": "Get a license",
      "description": "\n\nhttps://docs.github.com/v3/licenses/#get-a-license",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/licenses/{{ license }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_163__",
      "_id": "__REQ_3348__",
      "_type": "request",
      "name": "Render a Markdown document",
      "description": "\n\nhttps://docs.github.com/v3/markdown/#render-a-markdown-document",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/markdown",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_163__",
      "_id": "__REQ_3349__",
      "_type": "request",
      "name": "Render a Markdown document in raw mode",
      "description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.\n\nhttps://docs.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/markdown/raw",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3350__",
      "_type": "request",
      "name": "Get a subscription plan for an account",
      "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/marketplace_listing/accounts/{{ account_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3351__",
      "_type": "request",
      "name": "List plans",
      "description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#list-plans",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/marketplace_listing/plans",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3352__",
      "_type": "request",
      "name": "List accounts for a plan",
      "description": "Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#list-accounts-for-a-plan",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/marketplace_listing/plans/{{ plan_id }}/accounts",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3353__",
      "_type": "request",
      "name": "Get a subscription plan for an account (stubbed)",
      "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account-stubbed",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/marketplace_listing/stubbed/accounts/{{ account_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3354__",
      "_type": "request",
      "name": "List plans (stubbed)",
      "description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#list-plans-stubbed",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/marketplace_listing/stubbed/plans",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3355__",
      "_type": "request",
      "name": "List accounts for a plan (stubbed)",
      "description": "Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.\n\nhttps://docs.github.com/rest/reference/apps#list-accounts-for-a-plan-stubbed",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/marketplace_listing/stubbed/plans/{{ plan_id }}/accounts",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_164__",
      "_id": "__REQ_3356__",
      "_type": "request",
      "name": "Get GitHub meta information",
      "description": "Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see \"[About GitHub's IP addresses](https://help.github.com/articles/about-github-s-ip-addresses/).\"\n\n**Note:** The IP addresses shown in the documentation's response are only example values. You must always query the API directly to get the latest list of IP addresses.\n\nhttps://docs.github.com/v3/meta/#get-github-meta-information",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/meta",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3357__",
      "_type": "request",
      "name": "List public events for a network of repositories",
      "description": "\n\nhttps://docs.github.com/rest/reference/activity#list-public-events-for-a-network-of-repositories",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/networks/{{ owner }}/{{ repo }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3358__",
      "_type": "request",
      "name": "List notifications for the authenticated user",
      "description": "List all notifications for the current user, sorted by most recently updated.\n\nhttps://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/notifications",
      "body": {},
      "parameters": [
        {
          "name": "all",
          "value": false,
          "disabled": false
        },
        {
          "name": "participating",
          "value": false,
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "before",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3359__",
      "_type": "request",
      "name": "Mark notifications as read",
      "description": "Marks all notifications as \"read\" removes it from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List notifications for the authenticated user](https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.\n\nhttps://docs.github.com/rest/reference/activity#mark-notifications-as-read",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/notifications",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3360__",
      "_type": "request",
      "name": "Get a thread",
      "description": "\n\nhttps://docs.github.com/rest/reference/activity#get-a-thread",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3361__",
      "_type": "request",
      "name": "Mark a thread as read",
      "description": "\n\nhttps://docs.github.com/rest/reference/activity#mark-a-thread-as-read",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3362__",
      "_type": "request",
      "name": "Get a thread subscription for the authenticated user",
      "description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.\n\nhttps://docs.github.com/rest/reference/activity#get-a-thread-subscription-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3363__",
      "_type": "request",
      "name": "Set a thread subscription",
      "description": "If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.\n\nYou can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.\n\nUnsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/rest/reference/activity#delete-a-thread-subscription) endpoint.\n\nhttps://docs.github.com/rest/reference/activity#set-a-thread-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3364__",
      "_type": "request",
      "name": "Delete a thread subscription",
      "description": "Mutes all future notifications for a conversation until you comment on the thread or get an **@mention**. If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the [Set a thread subscription](https://docs.github.com/rest/reference/activity#set-a-thread-subscription) endpoint and set `ignore` to `true`.\n\nhttps://docs.github.com/rest/reference/activity#delete-a-thread-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_164__",
      "_id": "__REQ_3365__",
      "_type": "request",
      "name": "Get Octocat",
      "description": "",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/octocat",
      "body": {},
      "parameters": [
        {
          "name": "s",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3366__",
      "_type": "request",
      "name": "List organizations",
      "description": "Lists all organizations, in the order that they were created on GitHub.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.\n\nhttps://docs.github.com/v3/orgs/#list-organizations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/organizations",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3367__",
      "_type": "request",
      "name": "Get an organization",
      "description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub plan information' below.\"\n\nhttps://docs.github.com/v3/orgs/#get-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.surtur-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3368__",
      "_type": "request",
      "name": "Update an organization",
      "description": "**Parameter Deprecation Notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).\n\nEnables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.\n\nhttps://docs.github.com/v3/orgs/#update-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.surtur-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3369__",
      "_type": "request",
      "name": "Get GitHub Actions permissions for an organization",
      "description": "Gets the GitHub Actions permissions policy for repositories and allowed actions in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3370__",
      "_type": "request",
      "name": "Set GitHub Actions permissions for an organization",
      "description": "Sets the GitHub Actions permissions policy for repositories and allowed actions in an organization.\n\nIf the organization belongs to an enterprise that has set restrictive permissions at the enterprise level, such as `allowed_actions` to `selected` actions, then you cannot override them for the organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3371__",
      "_type": "request",
      "name": "List selected repositories enabled for GitHub Actions in an organization",
      "description": "Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#list-selected-repositories-enabled-for-github-actions-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions/repositories",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3372__",
      "_type": "request",
      "name": "Set selected repositories enabled for GitHub Actions in an organization",
      "description": "Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#set-selected-repositories-enabled-for-github-actions-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions/repositories",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3373__",
      "_type": "request",
      "name": "Enable a selected repository for GitHub Actions in an organization",
      "description": "Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#enable-a-selected-repository-for-github-actions-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3374__",
      "_type": "request",
      "name": "Disable a selected repository for GitHub Actions in an organization",
      "description": "Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#disable-a-selected-repository-for-github-actions-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3375__",
      "_type": "request",
      "name": "Get allowed actions for an organization",
      "description": "Gets the selected actions that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#get-allowed-actions-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions/selected-actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3376__",
      "_type": "request",
      "name": "Set allowed actions for an organization",
      "description": "Sets the actions that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nIf the organization belongs to an enterprise that has `selected` actions set at the enterprise level, then you cannot override any of the enterprise's allowed actions settings.\n\nTo use the `patterns_allowed` setting for private repositories, the organization must belong to an enterprise. If the organization does not belong to an enterprise, then the `patterns_allowed` setting only applies to public repositories in the organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#set-allowed-actions-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/permissions/selected-actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3377__",
      "_type": "request",
      "name": "List self-hosted runner groups for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nLists all self-hosted runner groups configured in an organization and inherited from an enterprise.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-self-hosted-runner-groups-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3378__",
      "_type": "request",
      "name": "Create a self-hosted runner group for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nCreates a new self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#create-a-self-hosted-runner-group-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3379__",
      "_type": "request",
      "name": "Get a self-hosted runner group for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nGets a specific self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-group-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3380__",
      "_type": "request",
      "name": "Update a self-hosted runner group for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nUpdates the `name` and `visibility` of a self-hosted runner group in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#update-a-self-hosted-runner-group-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3381__",
      "_type": "request",
      "name": "Delete a self-hosted runner group from an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nDeletes a self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-group-from-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3382__",
      "_type": "request",
      "name": "List repository access to a self-hosted runner group in an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nLists the repositories with access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-repository-access-to-a-self-hosted-runner-group-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/repositories",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3383__",
      "_type": "request",
      "name": "Set repository access for a self-hosted runner group in an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nReplaces the list of repositories that have access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#set-repository-access-to-a-self-hosted-runner-group-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/repositories",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3384__",
      "_type": "request",
      "name": "Add repository access to a self-hosted runner group in an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\n\nAdds a repository to the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org`\nscope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#add-repository-acess-to-a-self-hosted-runner-group-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3385__",
      "_type": "request",
      "name": "Remove repository access to a self-hosted runner group in an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\n\nRemoves a repository from the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3386__",
      "_type": "request",
      "name": "List self-hosted runners in a group for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nLists self-hosted runners that are in a specific organization group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/runners",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3387__",
      "_type": "request",
      "name": "Set self-hosted runners in a group for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nReplaces the list of self-hosted runners that are part of an organization runner group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/runners",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3388__",
      "_type": "request",
      "name": "Add a self-hosted runner to a group for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\n\nAdds a self-hosted runner to a runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org`\nscope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3389__",
      "_type": "request",
      "name": "Remove a self-hosted runner from a group for an organization",
      "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\n\nRemoves a self-hosted runner from a group configured in an organization. The runner is then returned to the default group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runner-groups/{{ runner_group_id }}/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3390__",
      "_type": "request",
      "name": "List self-hosted runners for an organization",
      "description": "Lists all self-hosted runners configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runners",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3391__",
      "_type": "request",
      "name": "List runner applications for an organization",
      "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-runner-applications-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runners/downloads",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3392__",
      "_type": "request",
      "name": "Create a registration token for an organization",
      "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org --token TOKEN\n```\n\nhttps://docs.github.com/rest/reference/actions#create-a-registration-token-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runners/registration-token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3393__",
      "_type": "request",
      "name": "Create a remove token for an organization",
      "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```\n\nhttps://docs.github.com/rest/reference/actions#create-a-remove-token-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runners/remove-token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3394__",
      "_type": "request",
      "name": "Get a self-hosted runner for an organization",
      "description": "Gets a specific self-hosted runner configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3395__",
      "_type": "request",
      "name": "Delete a self-hosted runner from an organization",
      "description": "Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3396__",
      "_type": "request",
      "name": "List organization secrets",
      "description": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-organization-secrets",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3397__",
      "_type": "request",
      "name": "Get an organization public key",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-an-organization-public-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/public-key",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3398__",
      "_type": "request",
      "name": "Get an organization secret",
      "description": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-an-organization-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/{{ secret_name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3399__",
      "_type": "request",
      "name": "Create or update an organization secret",
      "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to\nuse this endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```\n\nhttps://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/{{ secret_name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3400__",
      "_type": "request",
      "name": "Delete an organization secret",
      "description": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-an-organization-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/{{ secret_name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3401__",
      "_type": "request",
      "name": "List selected repositories for an organization secret",
      "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/{{ secret_name }}/repositories",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3402__",
      "_type": "request",
      "name": "Set selected repositories for an organization secret",
      "description": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/{{ secret_name }}/repositories",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3403__",
      "_type": "request",
      "name": "Add selected repository to an organization secret",
      "description": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#add-selected-repository-to-an-organization-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/{{ secret_name }}/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3404__",
      "_type": "request",
      "name": "Remove selected repository from an organization secret",
      "description": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/actions/secrets/{{ secret_name }}/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3405__",
      "_type": "request",
      "name": "Get the audit log for an organization",
      "description": "**Note:** The audit log REST API is currently in beta and is subject to change.\n\nGets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\nTo use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/orgs#get-the-audit-log-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/audit-log",
      "body": {},
      "parameters": [
        {
          "name": "phrase",
          "disabled": false
        },
        {
          "name": "include",
          "disabled": false
        },
        {
          "name": "after",
          "disabled": false
        },
        {
          "name": "before",
          "disabled": false
        },
        {
          "name": "order",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3406__",
      "_type": "request",
      "name": "List users blocked by an organization",
      "description": "List the users blocked by an organization.\n\nhttps://docs.github.com/rest/reference/orgs#list-users-blocked-by-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/blocks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3407__",
      "_type": "request",
      "name": "Check if a user is blocked by an organization",
      "description": "\n\nhttps://docs.github.com/rest/reference/orgs#check-if-a-user-is-blocked-by-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/blocks/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3408__",
      "_type": "request",
      "name": "Block a user from an organization",
      "description": "\n\nhttps://docs.github.com/rest/reference/orgs#block-a-user-from-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/blocks/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3409__",
      "_type": "request",
      "name": "Unblock a user from an organization",
      "description": "\n\nhttps://docs.github.com/rest/reference/orgs#unblock-a-user-from-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/blocks/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3410__",
      "_type": "request",
      "name": "List SAML SSO authorizations for an organization",
      "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://help.github.com/en/articles/about-authentication-with-saml-single-sign-on).\n\nhttps://docs.github.com/v3/orgs/#list-saml-sso-authorizations-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/credential-authorizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3411__",
      "_type": "request",
      "name": "Remove a SAML SSO authorization for an organization",
      "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.\n\nhttps://docs.github.com/v3/orgs/#remove-a-saml-sso-authorization-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/credential-authorizations/{{ credential_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3412__",
      "_type": "request",
      "name": "List public organization events",
      "description": "\n\nhttps://docs.github.com/rest/reference/activity#list-public-organization-events",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3413__",
      "_type": "request",
      "name": "List failed organization invitations",
      "description": "The return hash contains `failed_at` and `failed_reason` fields which represent the time at which the invitation failed and the reason for the failure.\n\nhttps://docs.github.com/rest/reference/orgs#list-failed-organization-invitations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/failed_invitations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3414__",
      "_type": "request",
      "name": "List organization webhooks",
      "description": "\n\nhttps://docs.github.com/rest/reference/orgs#list-organization-webhooks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3415__",
      "_type": "request",
      "name": "Create an organization webhook",
      "description": "Here's how you can create a hook that posts payloads in JSON format:\n\nhttps://docs.github.com/rest/reference/orgs#create-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3416__",
      "_type": "request",
      "name": "Get an organization webhook",
      "description": "Returns a webhook configured in an organization. To get only the webhook `config` properties, see \"[Get a webhook configuration for an organization](/rest/reference/orgs#get-a-webhook-configuration-for-an-organization).\"\n\nhttps://docs.github.com/rest/reference/orgs#get-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3417__",
      "_type": "request",
      "name": "Update an organization webhook",
      "description": "Updates a webhook configured in an organization. When you update a webhook, the `secret` will be overwritten. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for an organization](/rest/reference/orgs#update-a-webhook-configuration-for-an-organization).\"\n\nhttps://docs.github.com/rest/reference/orgs#update-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3418__",
      "_type": "request",
      "name": "Delete an organization webhook",
      "description": "\n\nhttps://docs.github.com/rest/reference/orgs#delete-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3419__",
      "_type": "request",
      "name": "Get a webhook configuration for an organization",
      "description": "Returns the webhook configuration for an organization. To get more information about the webhook, including the `active` state and `events`, use \"[Get an organization webhook ](/rest/reference/orgs#get-an-organization-webhook).\"\n\nAccess tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:read` permission.\n\nhttps://docs.github.com/v3/orgs#get-a-webhook-configuration-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}/config",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3420__",
      "_type": "request",
      "name": "Update a webhook configuration for an organization",
      "description": "Updates the webhook configuration for an organization. To update more information about the webhook, including the `active` state and `events`, use \"[Update an organization webhook ](/rest/reference/orgs#update-an-organization-webhook).\"\n\nAccess tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:write` permission.\n\nhttps://docs.github.com/v3/orgs#update-a-webhook-configuration-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}/config",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3421__",
      "_type": "request",
      "name": "Ping an organization webhook",
      "description": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.\n\nhttps://docs.github.com/rest/reference/orgs#ping-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}/pings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3422__",
      "_type": "request",
      "name": "Get an organization installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#get-an-organization-installation-for-the-authenticated-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/installation",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3423__",
      "_type": "request",
      "name": "List app installations for an organization",
      "description": "Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with `admin:read` scope to use this endpoint.\n\nhttps://docs.github.com/v3/orgs/#list-app-installations-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/installations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_160__",
      "_id": "__REQ_3424__",
      "_type": "request",
      "name": "Get interaction restrictions for an organization",
      "description": "Shows which type of GitHub user can interact with this organization and when the restriction expires. If there is no restrictions, you will see an empty response.\n\nhttps://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/interaction-limits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_160__",
      "_id": "__REQ_3425__",
      "_type": "request",
      "name": "Set interaction restrictions for an organization",
      "description": "Temporarily restricts interactions to a certain type of GitHub user in any public repository in the given organization. You must be an organization owner to set these restrictions. Setting the interaction limit at the organization level will overwrite any interaction limits that are set for individual repositories owned by the organization.\n\nhttps://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/interaction-limits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_160__",
      "_id": "__REQ_3426__",
      "_type": "request",
      "name": "Remove interaction restrictions for an organization",
      "description": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions.\n\nhttps://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/interaction-limits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3427__",
      "_type": "request",
      "name": "List pending organization invitations",
      "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\nhttps://docs.github.com/rest/reference/orgs#list-pending-organization-invitations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/invitations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3428__",
      "_type": "request",
      "name": "Create an organization invitation",
      "description": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nhttps://docs.github.com/rest/reference/orgs#create-an-organization-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/invitations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3429__",
      "_type": "request",
      "name": "Cancel an organization invitation",
      "description": "Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications).\n\nhttps://docs.github.com/rest/reference/orgs#cancel-an-organization-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/invitations/{{ invitation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3430__",
      "_type": "request",
      "name": "List organization invitation teams",
      "description": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.\n\nhttps://docs.github.com/rest/reference/orgs#list-organization-invitation-teams",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/invitations/{{ invitation_id }}/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3431__",
      "_type": "request",
      "name": "List organization issues assigned to the authenticated user",
      "description": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/v3/issues/#list-organization-issues-assigned-to-the-authenticated-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/issues",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "assigned",
          "disabled": false
        },
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "labels",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3432__",
      "_type": "request",
      "name": "List organization members",
      "description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.\n\nhttps://docs.github.com/rest/reference/orgs#list-organization-members",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/members",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "all",
          "disabled": false
        },
        {
          "name": "role",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3433__",
      "_type": "request",
      "name": "Check organization membership for a user",
      "description": "Check if a user is, publicly or privately, a member of the organization.\n\nhttps://docs.github.com/rest/reference/orgs#check-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3434__",
      "_type": "request",
      "name": "Remove an organization member",
      "description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.\n\nhttps://docs.github.com/rest/reference/orgs#remove-an-organization-member",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3435__",
      "_type": "request",
      "name": "Get organization membership for a user",
      "description": "In order to get a user's membership with an organization, the authenticated user must be an organization member.\n\nhttps://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3436__",
      "_type": "request",
      "name": "Set organization membership for a user",
      "description": "Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.\n\nhttps://docs.github.com/rest/reference/orgs#set-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3437__",
      "_type": "request",
      "name": "Remove organization membership for a user",
      "description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.\n\nhttps://docs.github.com/rest/reference/orgs#remove-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3438__",
      "_type": "request",
      "name": "List organization migrations",
      "description": "Lists the most recent migrations.\n\nhttps://docs.github.com/rest/reference/migrations#list-organization-migrations",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.wyandotte-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/migrations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3439__",
      "_type": "request",
      "name": "Start an organization migration",
      "description": "Initiates the generation of a migration archive.\n\nhttps://docs.github.com/rest/reference/migrations#start-an-organization-migration",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/migrations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3440__",
      "_type": "request",
      "name": "Get an organization migration status",
      "description": "Fetches the status of a migration.\n\nThe `state` of a migration can be one of the following values:\n\n*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.\n\nhttps://docs.github.com/rest/reference/migrations#get-an-organization-migration-status",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.wyandotte-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/migrations/{{ migration_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3441__",
      "_type": "request",
      "name": "Download an organization migration archive",
      "description": "Fetches the URL to a migration archive.\n\nhttps://docs.github.com/rest/reference/migrations#download-an-organization-migration-archive",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.wyandotte-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/migrations/{{ migration_id }}/archive",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3442__",
      "_type": "request",
      "name": "Delete an organization migration archive",
      "description": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days.\n\nhttps://docs.github.com/rest/reference/migrations#delete-an-organization-migration-archive",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.wyandotte-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/migrations/{{ migration_id }}/archive",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3443__",
      "_type": "request",
      "name": "Unlock an organization repository",
      "description": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://docs.github.com/rest/reference/repos#delete-a-repository) when the migration is complete and you no longer need the source data.\n\nhttps://docs.github.com/rest/reference/migrations#unlock-an-organization-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.wyandotte-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/migrations/{{ migration_id }}/repos/{{ repo_name }}/lock",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3444__",
      "_type": "request",
      "name": "List repositories in an organization migration",
      "description": "List all the repositories for this organization migration.\n\nhttps://docs.github.com/rest/reference/migrations#list-repositories-in-an-organization-migration",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.wyandotte-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/migrations/{{ migration_id }}/repositories",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3445__",
      "_type": "request",
      "name": "List outside collaborators for an organization",
      "description": "List all users who are outside collaborators of an organization.\n\nhttps://docs.github.com/rest/reference/orgs#list-outside-collaborators-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/outside_collaborators",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3446__",
      "_type": "request",
      "name": "Convert an organization member to outside collaborator",
      "description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".\n\nhttps://docs.github.com/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/outside_collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3447__",
      "_type": "request",
      "name": "Remove outside collaborator from an organization",
      "description": "Removing a user from this list will remove them from all the organization's repositories.\n\nhttps://docs.github.com/rest/reference/orgs#remove-outside-collaborator-from-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/outside_collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3448__",
      "_type": "request",
      "name": "List organization projects",
      "description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/v3/projects/#list-organization-projects",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/projects",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3449__",
      "_type": "request",
      "name": "Create an organization project",
      "description": "Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/v3/projects/#create-an-organization-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/projects",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3450__",
      "_type": "request",
      "name": "List public organization members",
      "description": "Members of an organization can choose to have their membership publicized or not.\n\nhttps://docs.github.com/rest/reference/orgs#list-public-organization-members",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3451__",
      "_type": "request",
      "name": "Check public organization membership for a user",
      "description": "\n\nhttps://docs.github.com/rest/reference/orgs#check-public-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3452__",
      "_type": "request",
      "name": "Set public organization membership for the authenticated user",
      "description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_167__",
      "_id": "__REQ_3453__",
      "_type": "request",
      "name": "Remove public organization membership for the authenticated user",
      "description": "\n\nhttps://docs.github.com/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3454__",
      "_type": "request",
      "name": "List organization repositories",
      "description": "Lists repositories for the specified organization.\n\nhttps://docs.github.com/v3/repos/#list-organization-repositories",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/repos",
      "body": {},
      "parameters": [
        {
          "name": "type",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3455__",
      "_type": "request",
      "name": "Create an organization repository",
      "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository\n\nhttps://docs.github.com/v3/repos/#create-an-organization-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/repos",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_151__",
      "_id": "__REQ_3456__",
      "_type": "request",
      "name": "Get GitHub Actions billing for an organization",
      "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAccess tokens must have the `repo` or `admin:org` scope.\n\nhttps://docs.github.com/v3/billing/#get-github-actions-billing-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/settings/billing/actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_151__",
      "_id": "__REQ_3457__",
      "_type": "request",
      "name": "Get GitHub Packages billing for an organization",
      "description": "Gets the free and paid storage usued for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `repo` or `admin:org` scope.\n\nhttps://docs.github.com/v3/billing/#get-github-packages-billing-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/settings/billing/packages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_151__",
      "_id": "__REQ_3458__",
      "_type": "request",
      "name": "Get shared storage billing for an organization",
      "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `repo` or `admin:org` scope.\n\nhttps://docs.github.com/v3/billing/#get-shared-storage-billing-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/settings/billing/shared-storage",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3459__",
      "_type": "request",
      "name": "List IdP groups for an organization",
      "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups available in an organization. You can limit your page results using the `per_page` parameter. GitHub generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\nThe `per_page` parameter provides pagination for a list of IdP groups the authenticated user can access in an organization. For example, if the user `octocat` wants to see two groups per page in `octo-org` via cURL, it would look like this:\n\nhttps://docs.github.com/rest/reference/teams#list-idp-groups-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/team-sync/groups",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3460__",
      "_type": "request",
      "name": "List teams",
      "description": "Lists all teams in an organization that are visible to the authenticated user.\n\nhttps://docs.github.com/v3/teams/#list-teams",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3461__",
      "_type": "request",
      "name": "Create a team",
      "description": "To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"\n\nWhen you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see \"[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)\".\n\nhttps://docs.github.com/v3/teams/#create-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3462__",
      "_type": "request",
      "name": "Get a team by name",
      "description": "Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.\n\nhttps://docs.github.com/v3/teams/#get-a-team-by-name",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3463__",
      "_type": "request",
      "name": "Update a team",
      "description": "To edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.\n\nhttps://docs.github.com/v3/teams/#update-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3464__",
      "_type": "request",
      "name": "Delete a team",
      "description": "To delete a team, the authenticated user must be an organization owner or team maintainer.\n\nIf you are an organization owner, deleting a parent team will delete all of its child teams as well.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`.\n\nhttps://docs.github.com/v3/teams/#delete-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3465__",
      "_type": "request",
      "name": "List discussions",
      "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.\n\nhttps://docs.github.com/rest/reference/teams#list-discussions",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions",
      "body": {},
      "parameters": [
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3466__",
      "_type": "request",
      "name": "Create a discussion",
      "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.\n\nhttps://docs.github.com/rest/reference/teams#create-a-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3467__",
      "_type": "request",
      "name": "Get a discussion",
      "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.\n\nhttps://docs.github.com/rest/reference/teams#get-a-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3468__",
      "_type": "request",
      "name": "Update a discussion",
      "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.\n\nhttps://docs.github.com/rest/reference/teams#update-a-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3469__",
      "_type": "request",
      "name": "Delete a discussion",
      "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.\n\nhttps://docs.github.com/rest/reference/teams#delete-a-discussion",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3470__",
      "_type": "request",
      "name": "List discussion comments",
      "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.\n\nhttps://docs.github.com/rest/reference/teams#list-discussion-comments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3471__",
      "_type": "request",
      "name": "Create a discussion comment",
      "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.\n\nhttps://docs.github.com/rest/reference/teams#create-a-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3472__",
      "_type": "request",
      "name": "Get a discussion comment",
      "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.\n\nhttps://docs.github.com/rest/reference/teams#get-a-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3473__",
      "_type": "request",
      "name": "Update a discussion comment",
      "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.\n\nhttps://docs.github.com/rest/reference/teams#update-a-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3474__",
      "_type": "request",
      "name": "Delete a discussion comment",
      "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.\n\nhttps://docs.github.com/rest/reference/teams#delete-a-discussion-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3475__",
      "_type": "request",
      "name": "List reactions for a team discussion comment",
      "description": "List the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.\n\nhttps://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3476__",
      "_type": "request",
      "name": "Create reaction for a team discussion comment",
      "description": "Create a reaction to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.\n\nhttps://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3477__",
      "_type": "request",
      "name": "Delete team discussion comment reaction",
      "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/v3/reactions/#delete-team-discussion-comment-reaction",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3478__",
      "_type": "request",
      "name": "List reactions for a team discussion",
      "description": "List the reactions to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.\n\nhttps://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3479__",
      "_type": "request",
      "name": "Create reaction for a team discussion",
      "description": "Create a reaction to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.\n\nhttps://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3480__",
      "_type": "request",
      "name": "Delete team discussion reaction",
      "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/v3/reactions/#delete-team-discussion-reaction",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/discussions/{{ discussion_number }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3481__",
      "_type": "request",
      "name": "List pending team invitations",
      "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`.\n\nhttps://docs.github.com/rest/reference/teams#list-pending-team-invitations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/invitations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3482__",
      "_type": "request",
      "name": "List team members",
      "description": "Team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user.\n\nhttps://docs.github.com/rest/reference/teams#list-team-members",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/members",
      "body": {},
      "parameters": [
        {
          "name": "role",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3483__",
      "_type": "request",
      "name": "Get team membership for a user",
      "description": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/reference/teams#create-a-team).\n\nhttps://docs.github.com/rest/reference/teams#get-team-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3484__",
      "_type": "request",
      "name": "Add or update team membership for a user",
      "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nAn organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the \"pending\" state until the person accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\nhttps://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3485__",
      "_type": "request",
      "name": "Remove team membership for a user",
      "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\nhttps://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3486__",
      "_type": "request",
      "name": "List team projects",
      "description": "Lists the organization projects for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`.\n\nhttps://docs.github.com/v3/teams/#list-team-projects",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/projects",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3487__",
      "_type": "request",
      "name": "Check team permissions for a project",
      "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.\n\nhttps://docs.github.com/v3/teams/#check-team-permissions-for-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3488__",
      "_type": "request",
      "name": "Add or update team project permissions",
      "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.\n\nhttps://docs.github.com/v3/teams/#add-or-update-team-project-permissions",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3489__",
      "_type": "request",
      "name": "Remove a project from a team",
      "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.\n\nhttps://docs.github.com/v3/teams/#remove-a-project-from-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3490__",
      "_type": "request",
      "name": "List team repositories",
      "description": "Lists a team's repositories visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.\n\nhttps://docs.github.com/v3/teams/#list-team-repositories",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/repos",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3491__",
      "_type": "request",
      "name": "Check team permissions for a repository",
      "description": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n\nhttps://docs.github.com/v3/teams/#check-team-permissions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3492__",
      "_type": "request",
      "name": "Add or update team repository permissions",
      "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n\nFor more information about the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".\n\nhttps://docs.github.com/v3/teams/#add-or-update-team-repository-permissions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3493__",
      "_type": "request",
      "name": "Remove a repository from a team",
      "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n\nhttps://docs.github.com/v3/teams/#remove-a-repository-from-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3494__",
      "_type": "request",
      "name": "List IdP groups for a team",
      "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.\n\nhttps://docs.github.com/rest/reference/teams#list-idp-groups-for-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/team-sync/group-mappings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3495__",
      "_type": "request",
      "name": "Create or update IdP group connections",
      "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.\n\nhttps://docs.github.com/rest/reference/teams#create-or-update-idp-group-connections",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/team-sync/group-mappings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_176__",
      "_id": "__REQ_3496__",
      "_type": "request",
      "name": "List child teams",
      "description": "Lists the child teams of the team specified by `{team_slug}`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.\n\nhttps://docs.github.com/v3/teams/#list-child-teams",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3497__",
      "_type": "request",
      "name": "Get a project card",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#get-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3498__",
      "_type": "request",
      "name": "Update an existing project card",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#update-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3499__",
      "_type": "request",
      "name": "Delete a project card",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#delete-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3500__",
      "_type": "request",
      "name": "Move a project card",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#move-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}/moves",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3501__",
      "_type": "request",
      "name": "Get a project column",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#get-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3502__",
      "_type": "request",
      "name": "Update an existing project column",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#update-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3503__",
      "_type": "request",
      "name": "Delete a project column",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#delete-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3504__",
      "_type": "request",
      "name": "List project cards",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#list-project-cards",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}/cards",
      "body": {},
      "parameters": [
        {
          "name": "archived_state",
          "value": "not_archived",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3505__",
      "_type": "request",
      "name": "Create a project card",
      "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/rest/reference/projects#create-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}/cards",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3506__",
      "_type": "request",
      "name": "Move a project column",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#move-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}/moves",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3507__",
      "_type": "request",
      "name": "Get a project",
      "description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/v3/projects/#get-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3508__",
      "_type": "request",
      "name": "Update a project",
      "description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/v3/projects/#update-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3509__",
      "_type": "request",
      "name": "Delete a project",
      "description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled.\n\nhttps://docs.github.com/v3/projects/#delete-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3510__",
      "_type": "request",
      "name": "List project collaborators",
      "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.\n\nhttps://docs.github.com/rest/reference/projects#list-project-collaborators",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators",
      "body": {},
      "parameters": [
        {
          "name": "affiliation",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3511__",
      "_type": "request",
      "name": "Add project collaborator",
      "description": "Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.\n\nhttps://docs.github.com/rest/reference/projects#add-project-collaborator",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3512__",
      "_type": "request",
      "name": "Remove user as a collaborator",
      "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.\n\nhttps://docs.github.com/rest/reference/projects#remove-project-collaborator",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3513__",
      "_type": "request",
      "name": "Get project permission for a user",
      "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.\n\nhttps://docs.github.com/rest/reference/projects#get-project-permission-for-a-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators/{{ username }}/permission",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3514__",
      "_type": "request",
      "name": "List project columns",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#list-project-columns",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/columns",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3515__",
      "_type": "request",
      "name": "Create a project column",
      "description": "\n\nhttps://docs.github.com/rest/reference/projects#create-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/columns",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_170__",
      "_id": "__REQ_3516__",
      "_type": "request",
      "name": "Get rate limit status for the authenticated user",
      "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.\n\nhttps://docs.github.com/v3/rate_limit/#get-rate-limit-status-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/rate_limit",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3517__",
      "_type": "request",
      "name": "Delete a reaction (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Reactions API. We recommend migrating your existing code to use the new delete reactions endpoints. For more information, see this [blog post](https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/).\n\nOAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://docs.github.com/rest/reference/teams#discussions) or [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments).\n\nhttps://docs.github.com/v3/reactions/#delete-a-reaction-legacy",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3518__",
      "_type": "request",
      "name": "Get a repository",
      "description": "When you pass the `scarlet-witch-preview` media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.\n\nThe `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.\n\nhttps://docs.github.com/v3/repos/#get-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.scarlet-witch-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3519__",
      "_type": "request",
      "name": "Update a repository",
      "description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/rest/reference/repos#replace-all-repository-topics) endpoint.\n\nhttps://docs.github.com/v3/repos/#update-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3520__",
      "_type": "request",
      "name": "Delete a repository",
      "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned\nrepositories, you will get a `403 Forbidden` response.\n\nhttps://docs.github.com/v3/repos/#delete-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3521__",
      "_type": "request",
      "name": "List artifacts for a repository",
      "description": "Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-artifacts-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/artifacts",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3522__",
      "_type": "request",
      "name": "Get an artifact",
      "description": "Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-an-artifact",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/artifacts/{{ artifact_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3523__",
      "_type": "request",
      "name": "Delete an artifact",
      "description": "Deletes an artifact for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-an-artifact",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/artifacts/{{ artifact_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3524__",
      "_type": "request",
      "name": "Download an artifact",
      "description": "Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in\nthe response header to find the URL for the download. The `:archive_format` must be `zip`. Anyone with read access to\nthe repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.\nGitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#download-an-artifact",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/artifacts/{{ artifact_id }}/{{ archive_format }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3525__",
      "_type": "request",
      "name": "Get a job for a workflow run",
      "description": "Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-job-for-a-workflow-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/jobs/{{ job_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3526__",
      "_type": "request",
      "name": "Download job logs for a workflow run",
      "description": "Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look\nfor `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can\nuse this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must\nhave the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#download-job-logs-for-a-workflow-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/jobs/{{ job_id }}/logs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3527__",
      "_type": "request",
      "name": "Get GitHub Actions permissions for a repository",
      "description": "Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository.\n\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint. GitHub Apps must have the `administration` repository permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/permissions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3528__",
      "_type": "request",
      "name": "Set GitHub Actions permissions for a repository",
      "description": "Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions in the repository.\n\nIf the repository belongs to an organization or enterprise that has set restrictive permissions at the organization or enterprise levels, such as `allowed_actions` to `selected` actions, then you cannot override them for the repository.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/permissions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3529__",
      "_type": "request",
      "name": "Get allowed actions for a repository",
      "description": "Gets the settings for selected actions that are allowed in a repository. To use this endpoint, the repository policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#get-allowed-actions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/permissions/selected-actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3530__",
      "_type": "request",
      "name": "Set allowed actions for a repository",
      "description": "Sets the actions that are allowed in a repository. To use this endpoint, the repository permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository).\"\n\nIf the repository belongs to an organization or enterprise that has `selected` actions set at the organization or enterprise levels, then you cannot override any of the allowed actions settings.\n\nTo use the `patterns_allowed` setting for private repositories, the repository must belong to an enterprise. If the repository does not belong to an enterprise, then the `patterns_allowed` setting only applies to public repositories.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.\n\nhttps://docs.github.com/rest/reference/actions#set-allowed-actions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/permissions/selected-actions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3531__",
      "_type": "request",
      "name": "List self-hosted runners for a repository",
      "description": "Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the `repo` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runners",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3532__",
      "_type": "request",
      "name": "List runner applications for a repository",
      "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-runner-applications-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runners/downloads",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3533__",
      "_type": "request",
      "name": "Create a registration token for a repository",
      "description": "Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate\nusing an access token with the `repo` scope to use this endpoint.\n\n#### Example using registration token\n \nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN\n```\n\nhttps://docs.github.com/rest/reference/actions#create-a-registration-token-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runners/registration-token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3534__",
      "_type": "request",
      "name": "Create a remove token for a repository",
      "description": "Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour.\nYou must authenticate using an access token with the `repo` scope to use this endpoint.\n\n#### Example using remove token\n \nTo remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint.\n\n```\n./config.sh remove --token TOKEN\n```\n\nhttps://docs.github.com/rest/reference/actions#create-a-remove-token-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runners/remove-token",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3535__",
      "_type": "request",
      "name": "Get a self-hosted runner for a repository",
      "description": "Gets a specific self-hosted runner configured in a repository.\n\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3536__",
      "_type": "request",
      "name": "Delete a self-hosted runner from a repository",
      "description": "Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `repo`\nscope to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runners/{{ runner_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3537__",
      "_type": "request",
      "name": "List workflow runs for a repository",
      "description": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-workflow-runs-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs",
      "body": {},
      "parameters": [
        {
          "name": "actor",
          "disabled": false
        },
        {
          "name": "branch",
          "disabled": false
        },
        {
          "name": "event",
          "disabled": false
        },
        {
          "name": "status",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3538__",
      "_type": "request",
      "name": "Get a workflow run",
      "description": "Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-workflow-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3539__",
      "_type": "request",
      "name": "Delete a workflow run",
      "description": "Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is\nprivate you must use an access token with the `repo` scope. GitHub Apps must have the `actions:write` permission to use\nthis endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-a-workflow-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3540__",
      "_type": "request",
      "name": "List workflow run artifacts",
      "description": "Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-workflow-run-artifacts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}/artifacts",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3541__",
      "_type": "request",
      "name": "Cancel a workflow run",
      "description": "Cancels a workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#cancel-a-workflow-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}/cancel",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3542__",
      "_type": "request",
      "name": "List jobs for a workflow run",
      "description": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).\n\nhttps://docs.github.com/rest/reference/actions#list-jobs-for-a-workflow-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}/jobs",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "latest",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3543__",
      "_type": "request",
      "name": "Download workflow run logs",
      "description": "Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for\n`Location:` in the response header to find the URL for the download. Anyone with read access to the repository can use\nthis endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have\nthe `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#download-workflow-run-logs",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}/logs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3544__",
      "_type": "request",
      "name": "Delete workflow run logs",
      "description": "Deletes all logs for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-workflow-run-logs",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}/logs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3545__",
      "_type": "request",
      "name": "Re-run a workflow",
      "description": "Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#re-run-a-workflow",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}/rerun",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3546__",
      "_type": "request",
      "name": "Get workflow run usage",
      "description": "Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-workflow-run-usage",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/runs/{{ run_id }}/timing",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3547__",
      "_type": "request",
      "name": "List repository secrets",
      "description": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-repository-secrets",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/secrets",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3548__",
      "_type": "request",
      "name": "Get a repository public key",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `secrets` repository permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-repository-public-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/secrets/public-key",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3549__",
      "_type": "request",
      "name": "Get a repository secret",
      "description": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-repository-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/secrets/{{ secret_name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3550__",
      "_type": "request",
      "name": "Create or update a repository secret",
      "description": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use\nthis endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```\n\nhttps://docs.github.com/rest/reference/actions#create-or-update-a-repository-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/secrets/{{ secret_name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3551__",
      "_type": "request",
      "name": "Delete a repository secret",
      "description": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#delete-a-repository-secret",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/secrets/{{ secret_name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3552__",
      "_type": "request",
      "name": "List repository workflows",
      "description": "Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#list-repository-workflows",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/workflows",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3553__",
      "_type": "request",
      "name": "Get a workflow",
      "description": "Gets a specific workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-a-workflow",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/workflows/{{ workflow_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3554__",
      "_type": "request",
      "name": "Disable a workflow",
      "description": "Disables a workflow and sets the `state` of the workflow to `disabled_manually`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#disable-a-workflow",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/workflows/{{ workflow_id }}/disable",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3555__",
      "_type": "request",
      "name": "Create a workflow dispatch event",
      "description": "You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.\n\nYou must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see \"[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line).\"\n\nhttps://docs.github.com/rest/reference/actions#create-a-workflow-dispatch-event",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/workflows/{{ workflow_id }}/dispatches",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3556__",
      "_type": "request",
      "name": "Enable a workflow",
      "description": "Enables a workflow and sets the `state` of the workflow to `active`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#enable-a-workflow",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/workflows/{{ workflow_id }}/enable",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3557__",
      "_type": "request",
      "name": "List workflow runs",
      "description": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.\n\nhttps://docs.github.com/rest/reference/actions#list-workflow-runs",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/workflows/{{ workflow_id }}/runs",
      "body": {},
      "parameters": [
        {
          "name": "actor",
          "disabled": false
        },
        {
          "name": "branch",
          "disabled": false
        },
        {
          "name": "event",
          "disabled": false
        },
        {
          "name": "status",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_147__",
      "_id": "__REQ_3558__",
      "_type": "request",
      "name": "Get workflow usage",
      "description": "Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nYou can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/actions#get-workflow-usage",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/actions/workflows/{{ workflow_id }}/timing",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3559__",
      "_type": "request",
      "name": "List assignees",
      "description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.\n\nhttps://docs.github.com/rest/reference/issues#list-assignees",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/assignees",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3560__",
      "_type": "request",
      "name": "Check if a user can be assigned",
      "description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.\n\nhttps://docs.github.com/rest/reference/issues#check-if-a-user-can-be-assigned",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/assignees/{{ assignee }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3561__",
      "_type": "request",
      "name": "Enable automated security fixes",
      "description": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\".\n\nhttps://docs.github.com/v3/repos/#enable-automated-security-fixes",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.london-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/automated-security-fixes",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3562__",
      "_type": "request",
      "name": "Disable automated security fixes",
      "description": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\".\n\nhttps://docs.github.com/v3/repos/#disable-automated-security-fixes",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.london-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/automated-security-fixes",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3563__",
      "_type": "request",
      "name": "List branches",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#list-branches",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches",
      "body": {},
      "parameters": [
        {
          "name": "protected",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3564__",
      "_type": "request",
      "name": "Get a branch",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#get-a-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3565__",
      "_type": "request",
      "name": "Get branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#get-branch-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3566__",
      "_type": "request",
      "name": "Update branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users, apps, and teams in total is limited to 100 items.\n\nhttps://docs.github.com/rest/reference/repos#update-branch-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3567__",
      "_type": "request",
      "name": "Delete branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#delete-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3568__",
      "_type": "request",
      "name": "Get admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#get-admin-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/enforce_admins",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3569__",
      "_type": "request",
      "name": "Set admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\nhttps://docs.github.com/rest/reference/repos#set-admin-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/enforce_admins",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3570__",
      "_type": "request",
      "name": "Delete admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\nhttps://docs.github.com/rest/reference/repos#delete-admin-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/enforce_admins",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3571__",
      "_type": "request",
      "name": "Get pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#get-pull-request-review-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_pull_request_reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3572__",
      "_type": "request",
      "name": "Update pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\nhttps://docs.github.com/rest/reference/repos#update-pull-request-review-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_pull_request_reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3573__",
      "_type": "request",
      "name": "Delete pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#delete-pull-request-review-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_pull_request_reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3574__",
      "_type": "request",
      "name": "Get commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.\n\nhttps://docs.github.com/rest/reference/repos#get-commit-signature-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.zzzax-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_signatures",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3575__",
      "_type": "request",
      "name": "Create commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.\n\nhttps://docs.github.com/rest/reference/repos#create-commit-signature-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.zzzax-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_signatures",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3576__",
      "_type": "request",
      "name": "Delete commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.\n\nhttps://docs.github.com/rest/reference/repos#delete-commit-signature-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.zzzax-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_signatures",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3577__",
      "_type": "request",
      "name": "Get status checks protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#get-status-checks-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3578__",
      "_type": "request",
      "name": "Update status check protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.\n\nhttps://docs.github.com/rest/reference/repos#update-status-check-potection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3579__",
      "_type": "request",
      "name": "Remove status check protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#remove-status-check-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3580__",
      "_type": "request",
      "name": "Get all status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#get-all-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3581__",
      "_type": "request",
      "name": "Add status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#add-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3582__",
      "_type": "request",
      "name": "Set status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#set-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3583__",
      "_type": "request",
      "name": "Remove status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/rest/reference/repos#remove-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3584__",
      "_type": "request",
      "name": "Get access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists who has access to this protected branch.\n\n**Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.\n\nhttps://docs.github.com/rest/reference/repos#get-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3585__",
      "_type": "request",
      "name": "Delete access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch.\n\nhttps://docs.github.com/rest/reference/repos#delete-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3586__",
      "_type": "request",
      "name": "Get apps with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\nhttps://docs.github.com/rest/reference/repos#list-apps-with-access-to-the-protected-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/apps",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3587__",
      "_type": "request",
      "name": "Add app access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#add-app-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/apps",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3588__",
      "_type": "request",
      "name": "Set app access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#set-app-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/apps",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3589__",
      "_type": "request",
      "name": "Remove app access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#remove-app-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/apps",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3590__",
      "_type": "request",
      "name": "Get teams with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. The list includes child teams.\n\nhttps://docs.github.com/rest/reference/repos#list-teams-with-access-to-the-protected-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3591__",
      "_type": "request",
      "name": "Add team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. You can also give push access to child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#add-team-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3592__",
      "_type": "request",
      "name": "Set team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#set-team-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3593__",
      "_type": "request",
      "name": "Remove team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. You can also remove push access for child teams.\n\n| Type    | Description                                                                                                                                         |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#remove-team-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3594__",
      "_type": "request",
      "name": "Get users with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the people who have push access to this branch.\n\nhttps://docs.github.com/rest/reference/repos#list-users-with-access-to-the-protected-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3595__",
      "_type": "request",
      "name": "Add user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#add-user-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3596__",
      "_type": "request",
      "name": "Set user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#set-user-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3597__",
      "_type": "request",
      "name": "Remove user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a user to push to this branch.\n\n| Type    | Description                                                                                                                                   |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/rest/reference/repos#remove-user-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3598__",
      "_type": "request",
      "name": "Rename a branch",
      "description": "Renames a branch in a repository.\n\n**Note:** Although the API responds immediately, the branch rename process might take some extra time to complete in the background. You won't be able to push to the old branch name while the rename process is in progress. For more information, see \"[Renaming a branch](https://docs.github.com/github/administering-a-repository/renaming-a-branch)\".\n\nThe permissions required to use this endpoint depends on whether you are renaming the default branch.\n\nTo rename a non-default branch:\n\n* Users must have push access.\n* GitHub Apps must have the `contents:write` repository permission.\n\nTo rename the default branch:\n\n* Users must have admin or owner permissions.\n* GitHub Apps must have the `administration:write` repository permission.\n\nhttps://docs.github.com/rest/reference/repos#rename-a-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/rename",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3599__",
      "_type": "request",
      "name": "Create a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.\n\nIn a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.\n\nhttps://docs.github.com/rest/reference/checks#create-a-check-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3600__",
      "_type": "request",
      "name": "Get a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n\nhttps://docs.github.com/rest/reference/checks#get-a-check-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs/{{ check_run_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3601__",
      "_type": "request",
      "name": "Update a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.\n\nhttps://docs.github.com/rest/reference/checks#update-a-check-run",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs/{{ check_run_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3602__",
      "_type": "request",
      "name": "List check run annotations",
      "description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.\n\nhttps://docs.github.com/rest/reference/checks#list-check-run-annotations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs/{{ check_run_id }}/annotations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3603__",
      "_type": "request",
      "name": "Create a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://docs.github.com/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Update repository preferences for check suites](https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites)\". Your GitHub App must have the `checks:write` permission to create check suites.\n\nhttps://docs.github.com/rest/reference/checks#create-a-check-suite",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3604__",
      "_type": "request",
      "name": "Update repository preferences for check suites",
      "description": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.\n\nhttps://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/preferences",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3605__",
      "_type": "request",
      "name": "Get a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.\n\nhttps://docs.github.com/rest/reference/checks#get-a-check-suite",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/{{ check_suite_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3606__",
      "_type": "request",
      "name": "List check runs in a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n\nhttps://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/{{ check_suite_id }}/check-runs",
      "body": {},
      "parameters": [
        {
          "name": "check_name",
          "disabled": false
        },
        {
          "name": "status",
          "disabled": false
        },
        {
          "name": "filter",
          "value": "latest",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3607__",
      "_type": "request",
      "name": "Rerequest a check suite",
      "description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://docs.github.com/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.\n\nhttps://docs.github.com/rest/reference/checks#rerequest-a-check-suite",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/{{ check_suite_id }}/rerequest",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_153__",
      "_id": "__REQ_3608__",
      "_type": "request",
      "name": "List code scanning alerts for a repository",
      "description": "Lists all open code scanning alerts for the default branch (usually `main` or `master`). You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.\n\nhttps://docs.github.com/v3/code-scanning/#list-code-scanning-alerts-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/code-scanning/alerts",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "disabled": false
        },
        {
          "name": "ref",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_153__",
      "_id": "__REQ_3609__",
      "_type": "request",
      "name": "Get a code scanning alert",
      "description": "Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.\n\nThe security `alert_number` is found at the end of the security alert's URL. For example, the security alert ID for `https://github.com/Octo-org/octo-repo/security/code-scanning/88` is `88`.\n\nhttps://docs.github.com/v3/code-scanning/#get-a-code-scanning-alert",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/code-scanning/alerts/{{ alert_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_153__",
      "_id": "__REQ_3610__",
      "_type": "request",
      "name": "Update a code scanning alert",
      "description": "Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.\n\nhttps://docs.github.com/v3/code-scanning/#upload-a-code-scanning-alert",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/code-scanning/alerts/{{ alert_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_153__",
      "_id": "__REQ_3611__",
      "_type": "request",
      "name": "List recent code scanning analyses for a repository",
      "description": "List the details of recent code scanning analyses for a repository. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.\n\nhttps://docs.github.com/v3/code-scanning/#list-recent-analyses",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/code-scanning/analyses",
      "body": {},
      "parameters": [
        {
          "name": "ref",
          "disabled": false
        },
        {
          "name": "tool_name",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_153__",
      "_id": "__REQ_3612__",
      "_type": "request",
      "name": "Upload a SARIF file",
      "description": "Upload a SARIF file containing the results of a code scanning analysis to make the results available in a repository. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.\n\nhttps://docs.github.com/v3/code-scanning/#upload-a-sarif-analysis",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/code-scanning/sarifs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3613__",
      "_type": "request",
      "name": "List repository collaborators",
      "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.\n\nhttps://docs.github.com/rest/reference/repos#list-repository-collaborators",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators",
      "body": {},
      "parameters": [
        {
          "name": "affiliation",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3614__",
      "_type": "request",
      "name": "Check if a user is a repository collaborator",
      "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.\n\nhttps://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3615__",
      "_type": "request",
      "name": "Add a repository collaborator",
      "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nFor more information the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/rest/reference/repos#invitations).\n\n**Rate limits**\n\nTo prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.\n\nhttps://docs.github.com/rest/reference/repos#add-a-repository-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3616__",
      "_type": "request",
      "name": "Remove a repository collaborator",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#remove-a-repository-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3617__",
      "_type": "request",
      "name": "Get repository permissions for a user",
      "description": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.\n\nhttps://docs.github.com/rest/reference/repos#get-repository-permissions-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}/permission",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3618__",
      "_type": "request",
      "name": "List commit comments for a repository",
      "description": "Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/rest/overview/media-types/).\n\nComments are ordered by ascending ID.\n\nhttps://docs.github.com/rest/reference/repos#list-commit-comments-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3619__",
      "_type": "request",
      "name": "Get a commit comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#get-a-commit-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3620__",
      "_type": "request",
      "name": "Update a commit comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#update-a-commit-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3621__",
      "_type": "request",
      "name": "Delete a commit comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#delete-a-commit-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3622__",
      "_type": "request",
      "name": "List reactions for a commit comment",
      "description": "List the reactions to a [commit comment](https://docs.github.com/rest/reference/repos#comments).\n\nhttps://docs.github.com/v3/reactions/#list-reactions-for-a-commit-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3623__",
      "_type": "request",
      "name": "Create reaction for a commit comment",
      "description": "Create a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments). A response with a `Status: 200 OK` means that you already added the reaction type to this commit comment.\n\nhttps://docs.github.com/v3/reactions/#create-reaction-for-a-commit-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3624__",
      "_type": "request",
      "name": "Delete a commit comment reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments).\n\nhttps://docs.github.com/v3/reactions/#delete-a-commit-comment-reaction",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3625__",
      "_type": "request",
      "name": "List commits",
      "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/rest/reference/repos#list-commits",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits",
      "body": {},
      "parameters": [
        {
          "name": "sha",
          "disabled": false
        },
        {
          "name": "path",
          "disabled": false
        },
        {
          "name": "author",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "until",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3626__",
      "_type": "request",
      "name": "List branches for HEAD commit",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.\n\nhttps://docs.github.com/rest/reference/repos#list-branches-for-head-commit",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.groot-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/branches-where-head",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3627__",
      "_type": "request",
      "name": "List commit comments",
      "description": "Use the `:commit_sha` to specify the commit that will have its comments listed.\n\nhttps://docs.github.com/rest/reference/repos#list-commit-comments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3628__",
      "_type": "request",
      "name": "Create a commit comment",
      "description": "Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nhttps://docs.github.com/rest/reference/repos#create-a-commit-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3629__",
      "_type": "request",
      "name": "List pull requests associated with a commit",
      "description": "Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests) endpoint.\n\nhttps://docs.github.com/rest/reference/repos#list-pull-requests-associated-with-a-commit",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.groot-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/pulls",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3630__",
      "_type": "request",
      "name": "Get a commit",
      "description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/rest/reference/repos#get-a-commit",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3631__",
      "_type": "request",
      "name": "List check runs for a Git reference",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n\nhttps://docs.github.com/rest/reference/checks#list-check-runs-for-a-git-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/check-runs",
      "body": {},
      "parameters": [
        {
          "name": "check_name",
          "disabled": false
        },
        {
          "name": "status",
          "disabled": false
        },
        {
          "name": "filter",
          "value": "latest",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_152__",
      "_id": "__REQ_3632__",
      "_type": "request",
      "name": "List check suites for a Git reference",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.\n\nhttps://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/check-suites",
      "body": {},
      "parameters": [
        {
          "name": "app_id",
          "disabled": false
        },
        {
          "name": "check_name",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3633__",
      "_type": "request",
      "name": "Get the combined status for a specific reference",
      "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`\n\nhttps://docs.github.com/rest/reference/repos#get-the-combined-status-for-a-specific-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/status",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3634__",
      "_type": "request",
      "name": "List commit statuses for a reference",
      "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.\n\nhttps://docs.github.com/rest/reference/repos#list-commit-statuses-for-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/statuses",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_154__",
      "_id": "__REQ_3635__",
      "_type": "request",
      "name": "Get the code of conduct for a repository",
      "description": "Returns the contents of the repository's code of conduct file, if one is detected.\n\nA code of conduct is detected if there is a file named `CODE_OF_CONDUCT` in the root directory of the repository. GitHub detects which code of conduct it is using fuzzy matching.\n\nhttps://docs.github.com/v3/codes_of_conduct/#get-the-code-of-conduct-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.scarlet-witch-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/community/code_of_conduct",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3636__",
      "_type": "request",
      "name": "Get community profile metrics",
      "description": "This endpoint will return all community profile metrics, including an\noverall health score, repository description, the presence of documentation, detected\ncode of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE,\nREADME, and CONTRIBUTING files.\n\nThe `health_percentage` score is defined as a percentage of how many of\nthese four documents are present: README, CONTRIBUTING, LICENSE, and\nCODE_OF_CONDUCT. For example, if all four documents are present, then\nthe `health_percentage` is `100`. If only one is present, then the\n`health_percentage` is `25`.\n\n`content_reports_enabled` is only returned for organization-owned repositories.\n\nhttps://docs.github.com/rest/reference/repos#get-community-profile-metrics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/community/profile",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3637__",
      "_type": "request",
      "name": "Compare two commits",
      "description": "Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/rest/reference/repos#compare-two-commits",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/compare/{{ base }}...{{ head }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3638__",
      "_type": "request",
      "name": "Get repository content",
      "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values.\n\nhttps://docs.github.com/rest/reference/repos#get-repository-content",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contents/{{ path }}",
      "body": {},
      "parameters": [
        {
          "name": "ref",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3639__",
      "_type": "request",
      "name": "Create or update file contents",
      "description": "Creates a new file or replaces an existing file in a repository.\n\nhttps://docs.github.com/rest/reference/repos#create-or-update-file-contents",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contents/{{ path }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3640__",
      "_type": "request",
      "name": "Delete a file",
      "description": "Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.\n\nhttps://docs.github.com/rest/reference/repos#delete-a-file",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contents/{{ path }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3641__",
      "_type": "request",
      "name": "List repository contributors",
      "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.\n\nhttps://docs.github.com/v3/repos/#list-repository-contributors",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contributors",
      "body": {},
      "parameters": [
        {
          "name": "anon",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3642__",
      "_type": "request",
      "name": "List deployments",
      "description": "Simple filtering of deployments is available via query parameters:\n\nhttps://docs.github.com/rest/reference/repos#list-deployments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments",
      "body": {},
      "parameters": [
        {
          "name": "sha",
          "value": "none",
          "disabled": false
        },
        {
          "name": "ref",
          "value": "none",
          "disabled": false
        },
        {
          "name": "task",
          "value": "none",
          "disabled": false
        },
        {
          "name": "environment",
          "value": "none",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3643__",
      "_type": "request",
      "name": "Create a deployment",
      "description": "Deployments offer a few configurable parameters with certain defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them\nbefore we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have\nmultiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter\nmakes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If\nthe ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\nthe API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\nreturn a failure response.\n\nBy default, [commit statuses](https://docs.github.com/rest/reference/repos#statuses) for every submitted context must be in a `success`\nstate. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to\nspecify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\nnot require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text\nfield that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might\nbe `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an\napplication with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref.\n\n#### Merged branch response\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating\na deployment. This auto-merge happens when:\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master` in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful\nresponse.\n\n#### Merge conflict response\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't\nbe merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\n#### Failed commit status checks\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`\nstatus for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.\n\nhttps://docs.github.com/rest/reference/repos#create-a-deployment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3644__",
      "_type": "request",
      "name": "Get a deployment",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#get-a-deployment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3645__",
      "_type": "request",
      "name": "Delete a deployment",
      "description": "To ensure there can always be an active deployment, you can only delete an _inactive_ deployment. Anyone with `repo` or `repo_deployment` scopes can delete an inactive deployment.\n\nTo set a deployment as inactive, you must:\n\n*   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.\n*   Mark the active deployment as inactive by adding any non-successful deployment status.\n\nFor more information, see \"[Create a deployment](https://docs.github.com/rest/reference/repos/#create-a-deployment)\" and \"[Create a deployment status](https://docs.github.com/rest/reference/repos#create-a-deployment-status).\"\n\nhttps://docs.github.com/rest/reference/repos#delete-a-deployment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3646__",
      "_type": "request",
      "name": "List deployment statuses",
      "description": "Users with pull access can view deployment statuses for a deployment:\n\nhttps://docs.github.com/rest/reference/repos#list-deployment-statuses",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.flash-preview+json,application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}/statuses",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3647__",
      "_type": "request",
      "name": "Create a deployment status",
      "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.\n\nhttps://docs.github.com/rest/reference/repos#create-a-deployment-status",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.flash-preview+json,application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}/statuses",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3648__",
      "_type": "request",
      "name": "Get a deployment status",
      "description": "Users with pull access can view a deployment status for a deployment:\n\nhttps://docs.github.com/rest/reference/repos#get-a-deployment-status",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.flash-preview+json,application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}/statuses/{{ status_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3649__",
      "_type": "request",
      "name": "Create a repository dispatch event",
      "description": "You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see \"[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch).\"\n\nThe `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.\n\nThis endpoint requires write access to the repository by providing either:\n\n  - Personal access tokens with `repo` scope. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line)\" in the GitHub Help documentation.\n  - GitHub Apps with both `metadata:read` and `contents:read&write` permissions.\n\nThis input example shows how you can use the `client_payload` as a test to debug your workflow.\n\nhttps://docs.github.com/v3/repos/#create-a-repository-dispatch-event",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/dispatches",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3650__",
      "_type": "request",
      "name": "List repository events",
      "description": "\n\nhttps://docs.github.com/rest/reference/activity#list-repository-events",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3651__",
      "_type": "request",
      "name": "List forks",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#list-forks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/forks",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "newest",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3652__",
      "_type": "request",
      "name": "Create a fork",
      "description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://support.github.com/contact) or [GitHub Premium Support](https://premium.githubsupport.com).\n\nhttps://docs.github.com/rest/reference/repos#create-a-fork",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/forks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3653__",
      "_type": "request",
      "name": "Create a blob",
      "description": "\n\nhttps://docs.github.com/rest/reference/git#create-a-blob",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/blobs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3654__",
      "_type": "request",
      "name": "Get a blob",
      "description": "The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size.\n\nhttps://docs.github.com/rest/reference/git#get-a-blob",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/blobs/{{ file_sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3655__",
      "_type": "request",
      "name": "Create a commit",
      "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/rest/reference/git#create-a-commit",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/commits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3656__",
      "_type": "request",
      "name": "Get a commit",
      "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/rest/reference/git#get-a-commit",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/commits/{{ commit_sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3657__",
      "_type": "request",
      "name": "List matching references",
      "description": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.\n\nhttps://docs.github.com/rest/reference/git#list-matching-references",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/matching-refs/{{ ref }}",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3658__",
      "_type": "request",
      "name": "Get a reference",
      "description": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nhttps://docs.github.com/rest/reference/git#get-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/ref/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3659__",
      "_type": "request",
      "name": "Create a reference",
      "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.\n\nhttps://docs.github.com/rest/reference/git#create-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/refs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3660__",
      "_type": "request",
      "name": "Update a reference",
      "description": "\n\nhttps://docs.github.com/rest/reference/git#update-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/refs/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3661__",
      "_type": "request",
      "name": "Delete a reference",
      "description": "\n\nhttps://docs.github.com/rest/reference/git#delete-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/refs/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3662__",
      "_type": "request",
      "name": "Create a tag object",
      "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://docs.github.com/rest/reference/git#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://docs.github.com/rest/reference/git#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/rest/reference/git#create-a-tag-object",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/tags",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3663__",
      "_type": "request",
      "name": "Get a tag",
      "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/rest/reference/git#get-a-tag",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/tags/{{ tag_sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3664__",
      "_type": "request",
      "name": "Create a tree",
      "description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.\n\nIf you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"[Create a commit](https://docs.github.com/rest/reference/git#create-a-commit)\" and \"[Update a reference](https://docs.github.com/rest/reference/git#update-a-reference).\"\n\nhttps://docs.github.com/rest/reference/git#create-a-tree",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/trees",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_158__",
      "_id": "__REQ_3665__",
      "_type": "request",
      "name": "Get a tree",
      "description": "Returns a single tree using the SHA1 value for that tree.\n\nIf `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.\n\nhttps://docs.github.com/rest/reference/git#get-a-tree",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/trees/{{ tree_sha }}",
      "body": {},
      "parameters": [
        {
          "name": "recursive",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3666__",
      "_type": "request",
      "name": "List repository webhooks",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#list-repository-webhooks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3667__",
      "_type": "request",
      "name": "Create a repository webhook",
      "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can\nshare the same `config` as long as those webhooks do not have any `events` that overlap.\n\nhttps://docs.github.com/rest/reference/repos#create-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3668__",
      "_type": "request",
      "name": "Get a repository webhook",
      "description": "Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configuration for a repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository).\"\n\nhttps://docs.github.com/rest/reference/repos#get-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3669__",
      "_type": "request",
      "name": "Update a repository webhook",
      "description": "Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for a repository](/rest/reference/repos#update-a-webhook-configuration-for-a-repository).\"\n\nhttps://docs.github.com/rest/reference/repos#update-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3670__",
      "_type": "request",
      "name": "Delete a repository webhook",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#delete-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3671__",
      "_type": "request",
      "name": "Get a webhook configuration for a repository",
      "description": "Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use \"[Get a repository webhook](/rest/reference/orgs#get-a-repository-webhook).\"\n\nAccess tokens must have the `read:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:read` permission.\n\nhttps://docs.github.com/v3/repos#get-a-webhook-configuration-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}/config",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3672__",
      "_type": "request",
      "name": "Update a webhook configuration for a repository",
      "description": "Updates the webhook configuration for a repository. To update more information about the webhook, including the `active` state and `events`, use \"[Update a repository webhook](/rest/reference/orgs#update-a-repository-webhook).\"\n\nAccess tokens must have the `write:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:write` permission.\n\nhttps://docs.github.com/v3/repos#update-a-webhook-configuration-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}/config",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3673__",
      "_type": "request",
      "name": "Ping a repository webhook",
      "description": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.\n\nhttps://docs.github.com/rest/reference/repos#ping-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}/pings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3674__",
      "_type": "request",
      "name": "Test the push repository webhook",
      "description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`\n\nhttps://docs.github.com/rest/reference/repos#test-the-push-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}/tests",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3675__",
      "_type": "request",
      "name": "Get an import status",
      "description": "View the progress of an import.\n\n**Import status**\n\nThis section includes details about the possible values of the `status` field of the Import Progress response.\n\nAn import that does not have errors will progress through these steps:\n\n*   `detecting` - the \"detection\" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.\n*   `importing` - the \"raw\" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).\n*   `mapping` - the \"rewrite\" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.\n*   `pushing` - the \"push\" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is \"Writing objects\".\n*   `complete` - the import is complete, and the repository is ready on GitHub.\n\nIf there are problems, you will see one of these in the `status` field:\n\n*   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n*   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://support.github.com/contact) or [GitHub Premium Support](https://premium.githubsupport.com) for more information.\n*   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n*   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://docs.github.com/rest/reference/migrations#cancel-an-import) and [retry](https://docs.github.com/rest/reference/migrations#start-an-import) with the correct URL.\n*   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n\n**The project_choices field**\n\nWhen multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.\n\n**Git LFS related fields**\n\nThis section includes details about Git LFS related fields that may be present in the Import Progress response.\n\n*   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.\n*   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.\n*   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.\n*   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a \"Get Large Files\" request.\n\nhttps://docs.github.com/rest/reference/migrations#get-an-import-status",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3676__",
      "_type": "request",
      "name": "Start an import",
      "description": "Start a source import to a GitHub repository using GitHub Importer.\n\nhttps://docs.github.com/rest/reference/migrations#start-an-import",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3677__",
      "_type": "request",
      "name": "Update an import",
      "description": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API\nrequest. If no parameters are provided, the import will be restarted.\n\nhttps://docs.github.com/rest/reference/migrations#update-an-import",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3678__",
      "_type": "request",
      "name": "Cancel an import",
      "description": "Stop an import for a repository.\n\nhttps://docs.github.com/rest/reference/migrations#cancel-an-import",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3679__",
      "_type": "request",
      "name": "Get commit authors",
      "description": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.\n\nThis endpoint and the [Map a commit author](https://docs.github.com/rest/reference/migrations#map-a-commit-author) endpoint allow you to provide correct Git author information.\n\nhttps://docs.github.com/rest/reference/migrations#get-commit-authors",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import/authors",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3680__",
      "_type": "request",
      "name": "Map a commit author",
      "description": "Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.\n\nhttps://docs.github.com/rest/reference/migrations#map-a-commit-author",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import/authors/{{ author_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3681__",
      "_type": "request",
      "name": "Get large files",
      "description": "List files larger than 100MB found during the import\n\nhttps://docs.github.com/rest/reference/migrations#get-large-files",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import/large_files",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_165__",
      "_id": "__REQ_3682__",
      "_type": "request",
      "name": "Update Git LFS preference",
      "description": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/).\n\nhttps://docs.github.com/rest/reference/migrations#update-git-lfs-preference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/import/lfs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_149__",
      "_id": "__REQ_3683__",
      "_type": "request",
      "name": "Get a repository installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/v3/apps/#get-a-repository-installation-for-the-authenticated-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/installation",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_160__",
      "_id": "__REQ_3684__",
      "_type": "request",
      "name": "Get interaction restrictions for a repository",
      "description": "Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response.\n\nhttps://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/interaction-limits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_160__",
      "_id": "__REQ_3685__",
      "_type": "request",
      "name": "Set interaction restrictions for a repository",
      "description": "Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or admin access to set these restrictions. If an interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.\n\nhttps://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/interaction-limits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_160__",
      "_id": "__REQ_3686__",
      "_type": "request",
      "name": "Remove interaction restrictions for a repository",
      "description": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions. If the interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.\n\nhttps://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/interaction-limits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3687__",
      "_type": "request",
      "name": "List repository invitations",
      "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.\n\nhttps://docs.github.com/rest/reference/repos#list-repository-invitations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/invitations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3688__",
      "_type": "request",
      "name": "Update a repository invitation",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#update-a-repository-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/invitations/{{ invitation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3689__",
      "_type": "request",
      "name": "Delete a repository invitation",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#delete-a-repository-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/invitations/{{ invitation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3690__",
      "_type": "request",
      "name": "List repository issues",
      "description": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/v3/issues/#list-repository-issues",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues",
      "body": {},
      "parameters": [
        {
          "name": "milestone",
          "disabled": false
        },
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "assignee",
          "disabled": false
        },
        {
          "name": "creator",
          "disabled": false
        },
        {
          "name": "mentioned",
          "disabled": false
        },
        {
          "name": "labels",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3691__",
      "_type": "request",
      "name": "Create an issue",
      "description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.\n\nhttps://docs.github.com/v3/issues/#create-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3692__",
      "_type": "request",
      "name": "List issue comments for a repository",
      "description": "By default, Issue Comments are ordered by ascending ID.\n\nhttps://docs.github.com/rest/reference/issues#list-issue-comments-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3693__",
      "_type": "request",
      "name": "Get an issue comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#get-an-issue-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3694__",
      "_type": "request",
      "name": "Update an issue comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#update-an-issue-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3695__",
      "_type": "request",
      "name": "Delete an issue comment",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#delete-an-issue-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3696__",
      "_type": "request",
      "name": "List reactions for an issue comment",
      "description": "List the reactions to an [issue comment](https://docs.github.com/rest/reference/issues#comments).\n\nhttps://docs.github.com/v3/reactions/#list-reactions-for-an-issue-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3697__",
      "_type": "request",
      "name": "Create reaction for an issue comment",
      "description": "Create a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments). A response with a `Status: 200 OK` means that you already added the reaction type to this issue comment.\n\nhttps://docs.github.com/v3/reactions/#create-reaction-for-an-issue-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3698__",
      "_type": "request",
      "name": "Delete an issue comment reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments).\n\nhttps://docs.github.com/v3/reactions/#delete-an-issue-comment-reaction",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3699__",
      "_type": "request",
      "name": "List issue events for a repository",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#list-issue-events-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.starfox-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3700__",
      "_type": "request",
      "name": "Get an issue event",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#get-an-issue-event",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.starfox-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/events/{{ event_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3701__",
      "_type": "request",
      "name": "Get an issue",
      "description": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/v3/issues/#get-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3702__",
      "_type": "request",
      "name": "Update an issue",
      "description": "Issue owners and users with push access can edit an issue.\n\nhttps://docs.github.com/v3/issues/#update-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3703__",
      "_type": "request",
      "name": "Add assignees to an issue",
      "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.\n\nhttps://docs.github.com/rest/reference/issues#add-assignees-to-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/assignees",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3704__",
      "_type": "request",
      "name": "Remove assignees from an issue",
      "description": "Removes one or more assignees from an issue.\n\nhttps://docs.github.com/rest/reference/issues#remove-assignees-from-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/assignees",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3705__",
      "_type": "request",
      "name": "List issue comments",
      "description": "Issue Comments are ordered by ascending ID.\n\nhttps://docs.github.com/rest/reference/issues#list-issue-comments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3706__",
      "_type": "request",
      "name": "Create an issue comment",
      "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.\n\nhttps://docs.github.com/rest/reference/issues#create-an-issue-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3707__",
      "_type": "request",
      "name": "List issue events",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#list-issue-events",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.starfox-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3708__",
      "_type": "request",
      "name": "List labels for an issue",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#list-labels-for-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3709__",
      "_type": "request",
      "name": "Add labels to an issue",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#add-labels-to-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3710__",
      "_type": "request",
      "name": "Set labels for an issue",
      "description": "Removes any previous labels and sets the new labels for an issue.\n\nhttps://docs.github.com/rest/reference/issues#set-labels-for-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3711__",
      "_type": "request",
      "name": "Remove all labels from an issue",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#remove-all-labels-from-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3712__",
      "_type": "request",
      "name": "Remove a label from an issue",
      "description": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.\n\nhttps://docs.github.com/rest/reference/issues#remove-a-label-from-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3713__",
      "_type": "request",
      "name": "Lock an issue",
      "description": "Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/v3/issues/#lock-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/lock",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3714__",
      "_type": "request",
      "name": "Unlock an issue",
      "description": "Users with push access can unlock an issue's conversation.\n\nhttps://docs.github.com/v3/issues/#unlock-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/lock",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3715__",
      "_type": "request",
      "name": "List reactions for an issue",
      "description": "List the reactions to an [issue](https://docs.github.com/rest/reference/issues).\n\nhttps://docs.github.com/v3/reactions/#list-reactions-for-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3716__",
      "_type": "request",
      "name": "Create reaction for an issue",
      "description": "Create a reaction to an [issue](https://docs.github.com/rest/reference/issues/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue.\n\nhttps://docs.github.com/v3/reactions/#create-reaction-for-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3717__",
      "_type": "request",
      "name": "Delete an issue reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.\n\nDelete a reaction to an [issue](https://docs.github.com/rest/reference/issues/).\n\nhttps://docs.github.com/v3/reactions/#delete-an-issue-reaction",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3718__",
      "_type": "request",
      "name": "List timeline events for an issue",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#list-timeline-events-for-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mockingbird-preview+json,application/vnd.github.starfox-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/timeline",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3719__",
      "_type": "request",
      "name": "List deploy keys",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#list-deploy-keys",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3720__",
      "_type": "request",
      "name": "Create a deploy key",
      "description": "You can create a read-only deploy key.\n\nhttps://docs.github.com/rest/reference/repos#create-a-deploy-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3721__",
      "_type": "request",
      "name": "Get a deploy key",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#get-a-deploy-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys/{{ key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3722__",
      "_type": "request",
      "name": "Delete a deploy key",
      "description": "Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.\n\nhttps://docs.github.com/rest/reference/repos#delete-a-deploy-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys/{{ key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3723__",
      "_type": "request",
      "name": "List labels for a repository",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#list-labels-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3724__",
      "_type": "request",
      "name": "Create a label",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#create-a-label",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3725__",
      "_type": "request",
      "name": "Get a label",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#get-a-label",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3726__",
      "_type": "request",
      "name": "Update a label",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#update-a-label",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3727__",
      "_type": "request",
      "name": "Delete a label",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#delete-a-label",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3728__",
      "_type": "request",
      "name": "List repository languages",
      "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.\n\nhttps://docs.github.com/v3/repos/#list-repository-languages",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/languages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_162__",
      "_id": "__REQ_3729__",
      "_type": "request",
      "name": "Get the license for a repository",
      "description": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.\n\nhttps://docs.github.com/v3/licenses/#get-the-license-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/license",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3730__",
      "_type": "request",
      "name": "Merge a branch",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#merge-a-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/merges",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3731__",
      "_type": "request",
      "name": "List milestones",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#list-milestones",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "due_on",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "asc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3732__",
      "_type": "request",
      "name": "Create a milestone",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#create-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3733__",
      "_type": "request",
      "name": "Get a milestone",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#get-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3734__",
      "_type": "request",
      "name": "Update a milestone",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#update-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3735__",
      "_type": "request",
      "name": "Delete a milestone",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#delete-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_161__",
      "_id": "__REQ_3736__",
      "_type": "request",
      "name": "List labels for issues in a milestone",
      "description": "\n\nhttps://docs.github.com/rest/reference/issues#list-labels-for-issues-in-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}/labels",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3737__",
      "_type": "request",
      "name": "List repository notifications for the authenticated user",
      "description": "List all notifications for the current user.\n\nhttps://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/notifications",
      "body": {},
      "parameters": [
        {
          "name": "all",
          "value": false,
          "disabled": false
        },
        {
          "name": "participating",
          "value": false,
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "before",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3738__",
      "_type": "request",
      "name": "Mark repository notifications as read",
      "description": "Marks all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List repository notifications for the authenticated user](https://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.\n\nhttps://docs.github.com/rest/reference/activity#mark-repository-notifications-as-read",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/notifications",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3739__",
      "_type": "request",
      "name": "Get a GitHub Pages site",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#get-a-github-pages-site",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3740__",
      "_type": "request",
      "name": "Create a GitHub Pages site",
      "description": "Configures a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\"\n\nhttps://docs.github.com/rest/reference/repos#create-a-github-pages-site",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.switcheroo-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3741__",
      "_type": "request",
      "name": "Update information about a GitHub Pages site",
      "description": "Updates information for a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\n\nhttps://docs.github.com/rest/reference/repos#update-information-about-a-github-pages-site",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3742__",
      "_type": "request",
      "name": "Delete a GitHub Pages site",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#delete-a-github-pages-site",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.switcheroo-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3743__",
      "_type": "request",
      "name": "List GitHub Pages builds",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#list-github-pages-builds",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3744__",
      "_type": "request",
      "name": "Request a GitHub Pages build",
      "description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.\n\nhttps://docs.github.com/rest/reference/repos#request-a-github-pages-build",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3745__",
      "_type": "request",
      "name": "Get latest Pages build",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#get-latest-pages-build",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds/latest",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3746__",
      "_type": "request",
      "name": "Get GitHub Pages build",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#get-github-pages-build",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds/{{ build_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3747__",
      "_type": "request",
      "name": "List repository projects",
      "description": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/v3/projects/#list-repository-projects",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/projects",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_168__",
      "_id": "__REQ_3748__",
      "_type": "request",
      "name": "Create a repository project",
      "description": "Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/v3/projects/#create-a-repository-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/projects",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3749__",
      "_type": "request",
      "name": "List pull requests",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/v3/pulls/#list-pull-requests",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "head",
          "disabled": false
        },
        {
          "name": "base",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3750__",
      "_type": "request",
      "name": "Create a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nYou can create a new pull request.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nhttps://docs.github.com/v3/pulls/#create-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3751__",
      "_type": "request",
      "name": "List review comments in a repository",
      "description": "Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.\n\nhttps://docs.github.com/rest/reference/pulls#list-review-comments-in-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3752__",
      "_type": "request",
      "name": "Get a review comment for a pull request",
      "description": "Provides details for a review comment.\n\nhttps://docs.github.com/rest/reference/pulls#get-a-review-comment-for-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3753__",
      "_type": "request",
      "name": "Update a review comment for a pull request",
      "description": "Enables you to edit a review comment.\n\nhttps://docs.github.com/rest/reference/pulls#update-a-review-comment-for-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3754__",
      "_type": "request",
      "name": "Delete a review comment for a pull request",
      "description": "Deletes a review comment.\n\nhttps://docs.github.com/rest/reference/pulls#delete-a-review-comment-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3755__",
      "_type": "request",
      "name": "List reactions for a pull request review comment",
      "description": "List the reactions to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments).\n\nhttps://docs.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3756__",
      "_type": "request",
      "name": "Create reaction for a pull request review comment",
      "description": "Create a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#comments). A response with a `Status: 200 OK` means that you already added the reaction type to this pull request review comment.\n\nhttps://docs.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_171__",
      "_id": "__REQ_3757__",
      "_type": "request",
      "name": "Delete a pull request comment reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`\n\nDelete a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments).\n\nhttps://docs.github.com/v3/reactions/#delete-a-pull-request-comment-reaction",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3758__",
      "_type": "request",
      "name": "Get a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/rest/reference/pulls#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nhttps://docs.github.com/v3/pulls/#get-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3759__",
      "_type": "request",
      "name": "Update a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nhttps://docs.github.com/v3/pulls/#update-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3760__",
      "_type": "request",
      "name": "List review comments on a pull request",
      "description": "Lists all review comments for a pull request. By default, review comments are in ascending order by ID.\n\nhttps://docs.github.com/rest/reference/pulls#list-review-comments-on-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3761__",
      "_type": "request",
      "name": "Create a review comment for a pull request",
      "description": "\nCreates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an issue comment](https://docs.github.com/rest/reference/issues#create-an-issue-comment).\" We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.\n\nYou can still create a review comment using the `position` parameter. When you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required. For more information, see the [`comfort-fade` preview notice](https://docs.github.com/rest/reference/pulls#create-a-review-comment-for-a-pull-request-preview-notices).\n\n**Note:** The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nhttps://docs.github.com/rest/reference/pulls#create-a-review-comment-for-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3762__",
      "_type": "request",
      "name": "Create a reply for a review comment",
      "description": "Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nhttps://docs.github.com/rest/reference/pulls#create-a-reply-for-a-review-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/comments/{{ comment_id }}/replies",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3763__",
      "_type": "request",
      "name": "List commits on a pull request",
      "description": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/rest/reference/repos#list-commits) endpoint.\n\nhttps://docs.github.com/v3/pulls/#list-commits-on-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/commits",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3764__",
      "_type": "request",
      "name": "List pull requests files",
      "description": "**Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default.\n\nhttps://docs.github.com/v3/pulls/#list-pull-requests-files",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/files",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3765__",
      "_type": "request",
      "name": "Check if a pull request has been merged",
      "description": "\n\nhttps://docs.github.com/v3/pulls/#check-if-a-pull-request-has-been-merged",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/merge",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3766__",
      "_type": "request",
      "name": "Merge a pull request",
      "description": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.\n\nhttps://docs.github.com/v3/pulls/#merge-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/merge",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3767__",
      "_type": "request",
      "name": "List requested reviewers for a pull request",
      "description": "\n\nhttps://docs.github.com/rest/reference/pulls#list-requested-reviewers-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/requested_reviewers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3768__",
      "_type": "request",
      "name": "Request reviewers for a pull request",
      "description": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.\n\nhttps://docs.github.com/rest/reference/pulls#request-reviewers-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/requested_reviewers",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3769__",
      "_type": "request",
      "name": "Remove requested reviewers from a pull request",
      "description": "\n\nhttps://docs.github.com/rest/reference/pulls#remove-requested-reviewers-from-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/requested_reviewers",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3770__",
      "_type": "request",
      "name": "List reviews for a pull request",
      "description": "The list of reviews returns in chronological order.\n\nhttps://docs.github.com/rest/reference/pulls#list-reviews-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3771__",
      "_type": "request",
      "name": "Create a review for a pull request",
      "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nPull request reviews created in the `PENDING` state do not include the `submitted_at` property in the response.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://docs.github.com/rest/overview/media-types#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nhttps://docs.github.com/rest/reference/pulls#create-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3772__",
      "_type": "request",
      "name": "Get a review for a pull request",
      "description": "\n\nhttps://docs.github.com/rest/reference/pulls#get-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3773__",
      "_type": "request",
      "name": "Update a review for a pull request",
      "description": "Update the review summary comment with new text.\n\nhttps://docs.github.com/rest/reference/pulls#update-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3774__",
      "_type": "request",
      "name": "Delete a pending review for a pull request",
      "description": "\n\nhttps://docs.github.com/rest/reference/pulls#delete-a-pending-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3775__",
      "_type": "request",
      "name": "List comments for a pull request review",
      "description": "List comments for a specific pull request review.\n\nhttps://docs.github.com/rest/reference/pulls#list-comments-for-a-pull-request-review",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3776__",
      "_type": "request",
      "name": "Dismiss a review for a pull request",
      "description": "**Note:** To dismiss a pull request review on a [protected branch](https://docs.github.com/rest/reference/repos#branches), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.\n\nhttps://docs.github.com/rest/reference/pulls#dismiss-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}/dismissals",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3777__",
      "_type": "request",
      "name": "Submit a review for a pull request",
      "description": "\n\nhttps://docs.github.com/rest/reference/pulls#submit-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}/events",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_169__",
      "_id": "__REQ_3778__",
      "_type": "request",
      "name": "Update a pull request branch",
      "description": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.\n\nhttps://docs.github.com/v3/pulls/#update-a-pull-request-branch",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.lydian-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/update-branch",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3779__",
      "_type": "request",
      "name": "Get a repository README",
      "description": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.\n\nhttps://docs.github.com/rest/reference/repos#get-a-repository-readme",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/readme",
      "body": {},
      "parameters": [
        {
          "name": "ref",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3780__",
      "_type": "request",
      "name": "List releases",
      "description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.\n\nhttps://docs.github.com/rest/reference/repos#list-releases",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3781__",
      "_type": "request",
      "name": "Create a release",
      "description": "Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nhttps://docs.github.com/rest/reference/repos#create-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3782__",
      "_type": "request",
      "name": "Get a release asset",
      "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.\n\nhttps://docs.github.com/rest/reference/repos#get-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/assets/{{ asset_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3783__",
      "_type": "request",
      "name": "Update a release asset",
      "description": "Users with push access to the repository can edit a release asset.\n\nhttps://docs.github.com/rest/reference/repos#update-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/assets/{{ asset_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3784__",
      "_type": "request",
      "name": "Delete a release asset",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#delete-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/assets/{{ asset_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3785__",
      "_type": "request",
      "name": "Get the latest release",
      "description": "View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.\n\nhttps://docs.github.com/rest/reference/repos#get-the-latest-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/latest",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3786__",
      "_type": "request",
      "name": "Get a release by tag name",
      "description": "Get a published release with the specified tag.\n\nhttps://docs.github.com/rest/reference/repos#get-a-release-by-tag-name",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/tags/{{ tag }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3787__",
      "_type": "request",
      "name": "Get a release",
      "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).\n\nhttps://docs.github.com/rest/reference/repos#get-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3788__",
      "_type": "request",
      "name": "Update a release",
      "description": "Users with push access to the repository can edit a release.\n\nhttps://docs.github.com/rest/reference/repos#update-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3789__",
      "_type": "request",
      "name": "Delete a release",
      "description": "Users with push access to the repository can delete a release.\n\nhttps://docs.github.com/rest/reference/repos#delete-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3790__",
      "_type": "request",
      "name": "List release assets",
      "description": "\n\nhttps://docs.github.com/rest/reference/repos#list-release-assets",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}/assets",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3791__",
      "_type": "request",
      "name": "Upload a release asset",
      "description": "This endpoint makes use of [a Hypermedia relation](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in\nthe response of the [Create a release endpoint](https://docs.github.com/rest/reference/repos#create-a-release) to upload a release asset.\n\nYou need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nMost libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: \n\n`application/zip`\n\nGitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\nyou'll still need to pass your authentication to be able to upload an asset.\n\nWhen an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.\n\n**Notes:**\n*   GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"[List assets for a release](https://docs.github.com/rest/reference/repos#list-assets-for-a-release)\"\nendpoint lists the renamed filenames. For more information and help, contact [GitHub Support](https://support.github.com/contact).\n*   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.\n\nhttps://docs.github.com/rest/reference/repos#upload-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}/assets",
      "body": {},
      "parameters": [
        {
          "name": "name",
          "disabled": false
        },
        {
          "name": "label",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_175__",
      "_id": "__REQ_3792__",
      "_type": "request",
      "name": "List secret scanning alerts for a repository",
      "description": "Lists all secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/secret-scanning#list-secret-scanning-alerts-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/secret-scanning/alerts",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_175__",
      "_id": "__REQ_3793__",
      "_type": "request",
      "name": "Get a secret scanning alert",
      "description": "Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/secret-scanning#get-a-secret-scanning-alert",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/secret-scanning/alerts/{{ alert_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_175__",
      "_id": "__REQ_3794__",
      "_type": "request",
      "name": "Update a secret scanning alert",
      "description": "Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` write permission to use this endpoint.\n\nhttps://docs.github.com/rest/reference/secret-scanning#update-a-secret-scanning-alert",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/secret-scanning/alerts/{{ alert_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3795__",
      "_type": "request",
      "name": "List stargazers",
      "description": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:\n\nhttps://docs.github.com/rest/reference/activity#list-stargazers",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stargazers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3796__",
      "_type": "request",
      "name": "Get the weekly commit activity",
      "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.\n\nhttps://docs.github.com/rest/reference/repos#get-the-weekly-commit-activity",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/code_frequency",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3797__",
      "_type": "request",
      "name": "Get the last year of commit activity",
      "description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.\n\nhttps://docs.github.com/rest/reference/repos#get-the-last-year-of-commit-activity",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/commit_activity",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3798__",
      "_type": "request",
      "name": "Get all contributor commit activity",
      "description": "\nReturns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits\n\nhttps://docs.github.com/rest/reference/repos#get-all-contributor-commit-activity",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/contributors",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3799__",
      "_type": "request",
      "name": "Get the weekly commit count",
      "description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week.\n\nhttps://docs.github.com/rest/reference/repos#get-the-weekly-commit-count",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/participation",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3800__",
      "_type": "request",
      "name": "Get the hourly commit count for each day",
      "description": "Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.\n\nhttps://docs.github.com/rest/reference/repos#get-the-hourly-commit-count-for-each-day",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/punch_card",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3801__",
      "_type": "request",
      "name": "Create a commit status",
      "description": "Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.\n\nhttps://docs.github.com/rest/reference/repos#create-a-commit-status",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/statuses/{{ sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3802__",
      "_type": "request",
      "name": "List watchers",
      "description": "Lists the people watching the specified repository.\n\nhttps://docs.github.com/rest/reference/activity#list-watchers",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscribers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3803__",
      "_type": "request",
      "name": "Get a repository subscription",
      "description": "\n\nhttps://docs.github.com/rest/reference/activity#get-a-repository-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3804__",
      "_type": "request",
      "name": "Set a repository subscription",
      "description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](https://docs.github.com/rest/reference/activity#delete-a-repository-subscription) completely.\n\nhttps://docs.github.com/rest/reference/activity#set-a-repository-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_148__",
      "_id": "__REQ_3805__",
      "_type": "request",
      "name": "Delete a repository subscription",
      "description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://docs.github.com/rest/reference/activity#set-a-repository-subscription).\n\nhttps://docs.github.com/rest/reference/activity#delete-a-repository-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3806__",
      "_type": "request",
      "name": "List repository tags",
      "description": "\n\nhttps://docs.github.com/v3/repos/#list-repository-tags",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/tags",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3807__",
      "_type": "request",
      "name": "Download a repository archive (tar)",
      "description": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.\n\nhttps://docs.github.com/rest/reference/repos#download-a-repository-archive",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/tarball/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3808__",
      "_type": "request",
      "name": "List repository teams",
      "description": "\n\nhttps://docs.github.com/v3/repos/#list-repository-teams",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3809__",
      "_type": "request",
      "name": "Get all repository topics",
      "description": "\n\nhttps://docs.github.com/v3/repos/#get-all-repository-topics",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/topics",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3810__",
      "_type": "request",
      "name": "Replace all repository topics",
      "description": "\n\nhttps://docs.github.com/v3/repos/#replace-all-repository-topics",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/topics",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3811__",
      "_type": "request",
      "name": "Get repository clones",
      "description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.\n\nhttps://docs.github.com/rest/reference/repos#get-repository-clones",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/traffic/clones",
      "body": {},
      "parameters": [
        {
          "name": "per",
          "value": "day",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3812__",
      "_type": "request",
      "name": "Get top referral paths",
      "description": "Get the top 10 popular contents over the last 14 days.\n\nhttps://docs.github.com/rest/reference/repos#get-top-referral-paths",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/traffic/popular/paths",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3813__",
      "_type": "request",
      "name": "Get top referral sources",
      "description": "Get the top 10 referrers over the last 14 days.\n\nhttps://docs.github.com/rest/reference/repos#get-top-referral-sources",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/traffic/popular/referrers",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3814__",
      "_type": "request",
      "name": "Get page views",
      "description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.\n\nhttps://docs.github.com/rest/reference/repos#get-page-views",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/traffic/views",
      "body": {},
      "parameters": [
        {
          "name": "per",
          "value": "day",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3815__",
      "_type": "request",
      "name": "Transfer a repository",
      "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).\n\nhttps://docs.github.com/v3/repos/#transfer-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/transfer",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3816__",
      "_type": "request",
      "name": "Check if vulnerability alerts are enabled for a repository",
      "description": "Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".\n\nhttps://docs.github.com/v3/repos/#check-if-vulnerability-alerts-are-enabled-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.dorian-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/vulnerability-alerts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3817__",
      "_type": "request",
      "name": "Enable vulnerability alerts",
      "description": "Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".\n\nhttps://docs.github.com/v3/repos/#enable-vulnerability-alerts",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.dorian-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/vulnerability-alerts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3818__",
      "_type": "request",
      "name": "Disable vulnerability alerts",
      "description": "Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".\n\nhttps://docs.github.com/v3/repos/#disable-vulnerability-alerts",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.dorian-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/vulnerability-alerts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3819__",
      "_type": "request",
      "name": "Download a repository archive (zip)",
      "description": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.\n\nhttps://docs.github.com/rest/reference/repos#download-a-repository-archive",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/zipball/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3820__",
      "_type": "request",
      "name": "Create a repository using a template",
      "description": "Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository\n\nhttps://docs.github.com/v3/repos/#create-a-repository-using-a-template",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ template_owner }}/{{ template_repo }}/generate",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_172__",
      "_id": "__REQ_3821__",
      "_type": "request",
      "name": "List public repositories",
      "description": "Lists all public repositories in the order that they were created.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.\n\nhttps://docs.github.com/v3/repos/#list-public-repositories",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repositories",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3822__",
      "_type": "request",
      "name": "List provisioned SCIM groups for an enterprise",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-provisioned-scim-groups-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Groups",
      "body": {},
      "parameters": [
        {
          "name": "startIndex",
          "disabled": false
        },
        {
          "name": "count",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3823__",
      "_type": "request",
      "name": "Provision a SCIM enterprise group and invite users",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nProvision an enterprise group, and invite users to the group. This sends invitation emails to the email address of the invited users to join the GitHub organization that the SCIM group corresponds to.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#provision-a-scim-enterprise-group-and-invite-users",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Groups",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3824__",
      "_type": "request",
      "name": "Get SCIM provisioning information for an enterprise group",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-group",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Groups/{{ scim_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3825__",
      "_type": "request",
      "name": "Set SCIM information for a provisioned enterprise group",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nReplaces an existing provisioned group’s information. You must provide all the information required for the group as if you were provisioning it for the first time. Any existing group information that you don't provide will be removed, including group membership. If you want to only update a specific attribute, use the [Update an attribute for a SCIM enterprise group](#update-an-attribute-for-a-scim-enterprise-group) endpoint instead.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-group",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Groups/{{ scim_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3826__",
      "_type": "request",
      "name": "Update an attribute for a SCIM enterprise group",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nAllows you to change a provisioned group’s individual attributes. To change a group’s values, you must provide a specific Operations JSON format that contains at least one of the add, remove, or replace operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\nhttps://docs.github.com/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-group",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Groups/{{ scim_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3827__",
      "_type": "request",
      "name": "Delete a SCIM group from an enterprise",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#delete-a-scim-group-from-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Groups/{{ scim_group_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3828__",
      "_type": "request",
      "name": "List SCIM provisioned identities for an enterprise",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nRetrieves a paginated list of all provisioned enterprise members, including pending invitations.\n\nWhen a user with a SAML-provisioned external identity leaves (or is removed from) an enterprise, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n  - When a user with a SCIM-provisioned external identity is removed from an enterprise, the account's metadata is preserved to allow the user to re-join the organization in the future.\n  - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n  - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\nThe returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub account after completing SSO:\n\n1. The user is granted access by the IdP and is not a member of the GitHub enterprise.\n\n1. The user attempts to access the GitHub enterprise and initiates the SAML SSO process, and is not currently signed in to their GitHub account.\n\n1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub account:\n   - If the user signs in, their GitHub account is linked to this entry.\n   - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub enterprise, and the external identity `null` entry remains in place.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#list-scim-provisioned-identities-for-an-enterprise",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Users",
      "body": {},
      "parameters": [
        {
          "name": "startIndex",
          "disabled": false
        },
        {
          "name": "count",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3829__",
      "_type": "request",
      "name": "Provision and invite a SCIM enterprise user",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nProvision enterprise membership for a user, and send organization invitation emails to the email address.\n\nYou can optionally include the groups a user will be invited to join. If you do not provide a list of `groups`, the user is provisioned for the enterprise, but no organization invitation emails will be sent.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#provision-and-invite-a-scim-enterprise-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3830__",
      "_type": "request",
      "name": "Get SCIM provisioning information for an enterprise user",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Users/{{ scim_user_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3831__",
      "_type": "request",
      "name": "Set SCIM information for a provisioned enterprise user",
      "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nReplaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](#update-an-attribute-for-an-enterprise-scim-user) endpoint instead.\n\nYou must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the enterprise, deletes the external identity, and deletes the associated `{scim_user_id}`.\n\nhttps://docs.github.com/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/scim/v2/enterprises/{{ enterprise }}/Users/{{ scim_user_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_156__",
      "_id": "__REQ_3832__",
      "_type": "request",
      "name": "Update an attribute for a SCIM enterprise user",
      "desc